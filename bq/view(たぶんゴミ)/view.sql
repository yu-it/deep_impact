select
	struct
		(
			count(distinct race_key_place_code) as race_key_place_code,
			count(distinct race_key_year) as race_key_year,
			count(distinct race_key_no) as race_key_no,
			count(distinct race_key_day) as race_key_day,
			count(distinct race_key_round) as race_key_round,
			count(distinct horse_no) as horse_no,
			count(distinct register_no) as register_no,
			count(distinct horse_name) as horse_name,
			count(distinct IDM) as IDM,
			count(distinct jockey_index) as jockey_index,
			count(distinct info_index) as info_index,
			count(distinct reserve_1) as reserve_1,
			count(distinct reserve_2) as reserve_2,
			count(distinct reserve_3) as reserve_3,
			count(distinct comprehension_index) as comprehension_index,
			count(distinct leg_status) as leg_status,
			count(distinct distance_apptitude) as distance_apptitude,
			count(distinct uptone_index) as uptone_index,
			count(distinct rotation) as rotation,
			count(distinct basis_odds) as basis_odds,
			count(distinct basis_reputation_order) as basis_reputation_order,
			count(distinct basis_multiple_odds) as basis_multiple_odds,
			count(distinct basis_multiple_reputation_order) as basis_multiple_reputation_order,
			count(distinct specific_info_white_double_circle) as specific_info_white_double_circle,
			count(distinct specific_info_white_circle) as specific_info_white_circle,
			count(distinct specific_info_black_triangle) as specific_info_black_triangle,
			count(distinct specific_info_white_triangle) as specific_info_white_triangle,
			count(distinct specific_info_cross) as specific_info_cross,
			count(distinct comprehension_info_double_circle) as comprehension_info_double_circle,
			count(distinct comprehension_info_circle) as comprehension_info_circle,
			count(distinct comprehension_info_black_triange) as comprehension_info_black_triange,
			count(distinct comprehension_info_white_triange) as comprehension_info_white_triange,
			count(distinct comprehension_info_cross) as comprehension_info_cross,
			count(distinct reputation_index) as reputation_index,
			count(distinct torture_index) as torture_index,
			count(distinct stable_index) as stable_index,
			count(distinct torture_arrow_code) as torture_arrow_code,
			count(distinct stable_reputation_code) as stable_reputation_code,
			count(distinct jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate,
			count(distinct passion_index) as passion_index,
			count(distinct hoof) as hoof,
			count(distinct weight_apptitude_code) as weight_apptitude_code,
			count(distinct class_code) as class_code,
			count(distinct reserve_4) as reserve_4,
			count(distinct blinker) as blinker,
			count(distinct jockey_name) as jockey_name,
			count(distinct load_weight) as load_weight,
			count(distinct apprentice_type) as apprentice_type,
			count(distinct torturer_name) as torturer_name,
			count(distinct torturer_belonging) as torturer_belonging,
			count(distinct other_data_key_previouse_performance_key1) as other_data_key_previouse_performance_key1,
			count(distinct other_data_key_previouse_performance_key2) as other_data_key_previouse_performance_key2,
			count(distinct other_data_key_previouse_performance_key3) as other_data_key_previouse_performance_key3,
			count(distinct other_data_key_previouse_performance_key4) as other_data_key_previouse_performance_key4,
			count(distinct other_data_key_previouse_performance_key5) as other_data_key_previouse_performance_key5,
			count(distinct other_data_key_previouse_race_key1) as other_data_key_previouse_race_key1,
			count(distinct other_data_key_previouse_race_key2) as other_data_key_previouse_race_key2,
			count(distinct other_data_key_previouse_race_key3) as other_data_key_previouse_race_key3,
			count(distinct other_data_key_previouse_race_key4) as other_data_key_previouse_race_key4,
			count(distinct other_data_key_previouse_race_key5) as other_data_key_previouse_race_key5,
			count(distinct gate_no) as gate_no,
			count(distinct reserve_5) as reserve_5,
			count(distinct mark_code_comprehension) as mark_code_comprehension,
			count(distinct mark_code_idm) as mark_code_idm,
			count(distinct mark_code_info) as mark_code_info,
			count(distinct mark_code_jockey) as mark_code_jockey,
			count(distinct mark_code_stable) as mark_code_stable,
			count(distinct mark_code_tourture) as mark_code_tourture,
			count(distinct mark_code_passion) as mark_code_passion,
			count(distinct grass_apptitude_code) as grass_apptitude_code,
			count(distinct dart_aptitude) as dart_aptitude,
			count(distinct jockey_code) as jockey_code,
			count(distinct torturer_code) as torturer_code,
			count(distinct reserve_6) as reserve_6,
			count(distinct prize_info_obtain_prize) as prize_info_obtain_prize,
			count(distinct prize_info_profit) as prize_info_profit,
			count(distinct prize_info_condition_class) as prize_info_condition_class,
			count(distinct speculation_ten_index) as speculation_ten_index,
			count(distinct speculation_pace_index) as speculation_pace_index,
			count(distinct speculation_uptone_index) as speculation_uptone_index,
			count(distinct speculation_position_index) as speculation_position_index,
			count(distinct speculation_pace_speculation) as speculation_pace_speculation,
			count(distinct speculation_following_middle_order) as speculation_following_middle_order,
			count(distinct speculation_following_middle_difference) as speculation_following_middle_difference,
			count(distinct speculation_following_middle_inner_outer) as speculation_following_middle_inner_outer,
			count(distinct speculation_following_3F_order) as speculation_following_3F_order,
			count(distinct speculation_following_3F_difference) as speculation_following_3F_difference,
			count(distinct speculation_following_3F_inner_outer) as speculation_following_3F_inner_outer,
			count(distinct speculation_goal_order) as speculation_goal_order,
			count(distinct speculation_goal_difference) as speculation_goal_difference,
			count(distinct speculation_goal_inner_outer) as speculation_goal_inner_outer,
			count(distinct speculation_pace_mark) as speculation_pace_mark,
			count(distinct distance_apptitude2) as distance_apptitude2,
			count(distinct gate_weight) as gate_weight,
			count(distinct gate_weight_delta) as gate_weight_delta,
			count(distinct invalid_flag) as invalid_flag,
			count(distinct sex) as sex,
			count(distinct owner_name) as owner_name,
			count(distinct ownersclub_code) as ownersclub_code,
			count(distinct horse_mark_code) as horse_mark_code,
			count(distinct passion_order) as passion_order,
			count(distinct ls_index_order) as ls_index_order,
			count(distinct ten_index_ranking) as ten_index_ranking,
			count(distinct pace_index_ranking) as pace_index_ranking,
			count(distinct uptone_index_ranking) as uptone_index_ranking,
			count(distinct position_index_ranking) as position_index_ranking,
			count(distinct jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate,
			count(distinct jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate,
			count(distinct transfer_type) as transfer_type,
			count(distinct running_type) as running_type,
			count(distinct figure) as figure,
			count(distinct figure_impression1) as figure_impression1,
			count(distinct figure_impression2) as figure_impression2,
			count(distinct figure_impression3) as figure_impression3,
			count(distinct horse_memo1) as horse_memo1,
			count(distinct horse_memo2) as horse_memo2,
			count(distinct horse_memo3) as horse_memo3,
			count(distinct reference_start_index) as reference_start_index,
			count(distinct reference_rate_of_delay) as reference_rate_of_delay,
			count(distinct reference_previous_race) as reference_previous_race,
			count(distinct reference_previous_race_jockey_code) as reference_previous_race_jockey_code,
			count(distinct million_index) as million_index,
			count(distinct million_mark) as million_mark,
			count(distinct demoted_flag) as demoted_flag,
			count(distinct passion_type) as passion_type,
			count(distinct suspended_reason_code) as suspended_reason_code,
			count(distinct flag) as flag,
			count(distinct apprenticeship_round_count) as apprenticeship_round_count,
			count(distinct apprenticeship_date) as apprenticeship_date,
			count(distinct apprenticeship_day_count) as apprenticeship_day_count,
			count(distinct grazing) as grazing,
			count(distinct grazing_ranking) as grazing_ranking,
			count(distinct stable_rank) as stable_rank,
			count(distinct reserve_7) as reserve_7,
			count(distinct crlf) as crlf
		) as num_distinct,
	struct
		(
			max(race_key_place_code) as race_key_place_code,
			max(race_key_year) as race_key_year,
			max(race_key_no) as race_key_no,
			max(race_key_day) as race_key_day,
			max(race_key_round) as race_key_round,
			max(horse_no) as horse_no,
			max(register_no) as register_no,
			max(horse_name) as horse_name,
			max(IDM) as IDM,
			max(jockey_index) as jockey_index,
			max(info_index) as info_index,
			max(reserve_1) as reserve_1,
			max(reserve_2) as reserve_2,
			max(reserve_3) as reserve_3,
			max(comprehension_index) as comprehension_index,
			max(leg_status) as leg_status,
			max(distance_apptitude) as distance_apptitude,
			max(uptone_index) as uptone_index,
			max(rotation) as rotation,
			max(basis_odds) as basis_odds,
			max(basis_reputation_order) as basis_reputation_order,
			max(basis_multiple_odds) as basis_multiple_odds,
			max(basis_multiple_reputation_order) as basis_multiple_reputation_order,
			max(specific_info_white_double_circle) as specific_info_white_double_circle,
			max(specific_info_white_circle) as specific_info_white_circle,
			max(specific_info_black_triangle) as specific_info_black_triangle,
			max(specific_info_white_triangle) as specific_info_white_triangle,
			max(specific_info_cross) as specific_info_cross,
			max(comprehension_info_double_circle) as comprehension_info_double_circle,
			max(comprehension_info_circle) as comprehension_info_circle,
			max(comprehension_info_black_triange) as comprehension_info_black_triange,
			max(comprehension_info_white_triange) as comprehension_info_white_triange,
			max(comprehension_info_cross) as comprehension_info_cross,
			max(reputation_index) as reputation_index,
			max(torture_index) as torture_index,
			max(stable_index) as stable_index,
			max(torture_arrow_code) as torture_arrow_code,
			max(stable_reputation_code) as stable_reputation_code,
			max(jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate,
			max(passion_index) as passion_index,
			max(hoof) as hoof,
			max(weight_apptitude_code) as weight_apptitude_code,
			max(class_code) as class_code,
			max(reserve_4) as reserve_4,
			max(blinker) as blinker,
			max(jockey_name) as jockey_name,
			max(load_weight) as load_weight,
			max(apprentice_type) as apprentice_type,
			max(torturer_name) as torturer_name,
			max(torturer_belonging) as torturer_belonging,
			max(other_data_key_previouse_performance_key1) as other_data_key_previouse_performance_key1,
			max(other_data_key_previouse_performance_key2) as other_data_key_previouse_performance_key2,
			max(other_data_key_previouse_performance_key3) as other_data_key_previouse_performance_key3,
			max(other_data_key_previouse_performance_key4) as other_data_key_previouse_performance_key4,
			max(other_data_key_previouse_performance_key5) as other_data_key_previouse_performance_key5,
			max(other_data_key_previouse_race_key1) as other_data_key_previouse_race_key1,
			max(other_data_key_previouse_race_key2) as other_data_key_previouse_race_key2,
			max(other_data_key_previouse_race_key3) as other_data_key_previouse_race_key3,
			max(other_data_key_previouse_race_key4) as other_data_key_previouse_race_key4,
			max(other_data_key_previouse_race_key5) as other_data_key_previouse_race_key5,
			max(gate_no) as gate_no,
			max(reserve_5) as reserve_5,
			max(mark_code_comprehension) as mark_code_comprehension,
			max(mark_code_idm) as mark_code_idm,
			max(mark_code_info) as mark_code_info,
			max(mark_code_jockey) as mark_code_jockey,
			max(mark_code_stable) as mark_code_stable,
			max(mark_code_tourture) as mark_code_tourture,
			max(mark_code_passion) as mark_code_passion,
			max(grass_apptitude_code) as grass_apptitude_code,
			max(dart_aptitude) as dart_aptitude,
			max(jockey_code) as jockey_code,
			max(torturer_code) as torturer_code,
			max(reserve_6) as reserve_6,
			max(prize_info_obtain_prize) as prize_info_obtain_prize,
			max(prize_info_profit) as prize_info_profit,
			max(prize_info_condition_class) as prize_info_condition_class,
			max(speculation_ten_index) as speculation_ten_index,
			max(speculation_pace_index) as speculation_pace_index,
			max(speculation_uptone_index) as speculation_uptone_index,
			max(speculation_position_index) as speculation_position_index,
			max(speculation_pace_speculation) as speculation_pace_speculation,
			max(speculation_following_middle_order) as speculation_following_middle_order,
			max(speculation_following_middle_difference) as speculation_following_middle_difference,
			max(speculation_following_middle_inner_outer) as speculation_following_middle_inner_outer,
			max(speculation_following_3F_order) as speculation_following_3F_order,
			max(speculation_following_3F_difference) as speculation_following_3F_difference,
			max(speculation_following_3F_inner_outer) as speculation_following_3F_inner_outer,
			max(speculation_goal_order) as speculation_goal_order,
			max(speculation_goal_difference) as speculation_goal_difference,
			max(speculation_goal_inner_outer) as speculation_goal_inner_outer,
			max(speculation_pace_mark) as speculation_pace_mark,
			max(distance_apptitude2) as distance_apptitude2,
			max(gate_weight) as gate_weight,
			max(gate_weight_delta) as gate_weight_delta,
			max(invalid_flag) as invalid_flag,
			max(sex) as sex,
			max(owner_name) as owner_name,
			max(ownersclub_code) as ownersclub_code,
			max(horse_mark_code) as horse_mark_code,
			max(passion_order) as passion_order,
			max(ls_index_order) as ls_index_order,
			max(ten_index_ranking) as ten_index_ranking,
			max(pace_index_ranking) as pace_index_ranking,
			max(uptone_index_ranking) as uptone_index_ranking,
			max(position_index_ranking) as position_index_ranking,
			max(jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate,
			max(jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate,
			max(transfer_type) as transfer_type,
			max(running_type) as running_type,
			max(figure) as figure,
			max(figure_impression1) as figure_impression1,
			max(figure_impression2) as figure_impression2,
			max(figure_impression3) as figure_impression3,
			max(horse_memo1) as horse_memo1,
			max(horse_memo2) as horse_memo2,
			max(horse_memo3) as horse_memo3,
			max(reference_start_index) as reference_start_index,
			max(reference_rate_of_delay) as reference_rate_of_delay,
			max(reference_previous_race) as reference_previous_race,
			max(reference_previous_race_jockey_code) as reference_previous_race_jockey_code,
			max(million_index) as million_index,
			max(million_mark) as million_mark,
			max(demoted_flag) as demoted_flag,
			max(passion_type) as passion_type,
			max(suspended_reason_code) as suspended_reason_code,
			max(flag) as flag,
			max(apprenticeship_round_count) as apprenticeship_round_count,
			max(apprenticeship_date) as apprenticeship_date,
			max(apprenticeship_day_count) as apprenticeship_day_count,
			max(grazing) as grazing,
			max(grazing_ranking) as grazing_ranking,
			max(stable_rank) as stable_rank,
			max(reserve_7) as reserve_7,
			max(crlf) as crlf
		) as max_values,
	struct
		(
			min(race_key_place_code) as race_key_place_code,
			min(race_key_year) as race_key_year,
			min(race_key_no) as race_key_no,
			min(race_key_day) as race_key_day,
			min(race_key_round) as race_key_round,
			min(horse_no) as horse_no,
			min(register_no) as register_no,
			min(horse_name) as horse_name,
			min(IDM) as IDM,
			min(jockey_index) as jockey_index,
			min(info_index) as info_index,
			min(reserve_1) as reserve_1,
			min(reserve_2) as reserve_2,
			min(reserve_3) as reserve_3,
			min(comprehension_index) as comprehension_index,
			min(leg_status) as leg_status,
			min(distance_apptitude) as distance_apptitude,
			min(uptone_index) as uptone_index,
			min(rotation) as rotation,
			min(basis_odds) as basis_odds,
			min(basis_reputation_order) as basis_reputation_order,
			min(basis_multiple_odds) as basis_multiple_odds,
			min(basis_multiple_reputation_order) as basis_multiple_reputation_order,
			min(specific_info_white_double_circle) as specific_info_white_double_circle,
			min(specific_info_white_circle) as specific_info_white_circle,
			min(specific_info_black_triangle) as specific_info_black_triangle,
			min(specific_info_white_triangle) as specific_info_white_triangle,
			min(specific_info_cross) as specific_info_cross,
			min(comprehension_info_double_circle) as comprehension_info_double_circle,
			min(comprehension_info_circle) as comprehension_info_circle,
			min(comprehension_info_black_triange) as comprehension_info_black_triange,
			min(comprehension_info_white_triange) as comprehension_info_white_triange,
			min(comprehension_info_cross) as comprehension_info_cross,
			min(reputation_index) as reputation_index,
			min(torture_index) as torture_index,
			min(stable_index) as stable_index,
			min(torture_arrow_code) as torture_arrow_code,
			min(stable_reputation_code) as stable_reputation_code,
			min(jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate,
			min(passion_index) as passion_index,
			min(hoof) as hoof,
			min(weight_apptitude_code) as weight_apptitude_code,
			min(class_code) as class_code,
			min(reserve_4) as reserve_4,
			min(blinker) as blinker,
			min(jockey_name) as jockey_name,
			min(load_weight) as load_weight,
			min(apprentice_type) as apprentice_type,
			min(torturer_name) as torturer_name,
			min(torturer_belonging) as torturer_belonging,
			min(other_data_key_previouse_performance_key1) as other_data_key_previouse_performance_key1,
			min(other_data_key_previouse_performance_key2) as other_data_key_previouse_performance_key2,
			min(other_data_key_previouse_performance_key3) as other_data_key_previouse_performance_key3,
			min(other_data_key_previouse_performance_key4) as other_data_key_previouse_performance_key4,
			min(other_data_key_previouse_performance_key5) as other_data_key_previouse_performance_key5,
			min(other_data_key_previouse_race_key1) as other_data_key_previouse_race_key1,
			min(other_data_key_previouse_race_key2) as other_data_key_previouse_race_key2,
			min(other_data_key_previouse_race_key3) as other_data_key_previouse_race_key3,
			min(other_data_key_previouse_race_key4) as other_data_key_previouse_race_key4,
			min(other_data_key_previouse_race_key5) as other_data_key_previouse_race_key5,
			min(gate_no) as gate_no,
			min(reserve_5) as reserve_5,
			min(mark_code_comprehension) as mark_code_comprehension,
			min(mark_code_idm) as mark_code_idm,
			min(mark_code_info) as mark_code_info,
			min(mark_code_jockey) as mark_code_jockey,
			min(mark_code_stable) as mark_code_stable,
			min(mark_code_tourture) as mark_code_tourture,
			min(mark_code_passion) as mark_code_passion,
			min(grass_apptitude_code) as grass_apptitude_code,
			min(dart_aptitude) as dart_aptitude,
			min(jockey_code) as jockey_code,
			min(torturer_code) as torturer_code,
			min(reserve_6) as reserve_6,
			min(prize_info_obtain_prize) as prize_info_obtain_prize,
			min(prize_info_profit) as prize_info_profit,
			min(prize_info_condition_class) as prize_info_condition_class,
			min(speculation_ten_index) as speculation_ten_index,
			min(speculation_pace_index) as speculation_pace_index,
			min(speculation_uptone_index) as speculation_uptone_index,
			min(speculation_position_index) as speculation_position_index,
			min(speculation_pace_speculation) as speculation_pace_speculation,
			min(speculation_following_middle_order) as speculation_following_middle_order,
			min(speculation_following_middle_difference) as speculation_following_middle_difference,
			min(speculation_following_middle_inner_outer) as speculation_following_middle_inner_outer,
			min(speculation_following_3F_order) as speculation_following_3F_order,
			min(speculation_following_3F_difference) as speculation_following_3F_difference,
			min(speculation_following_3F_inner_outer) as speculation_following_3F_inner_outer,
			min(speculation_goal_order) as speculation_goal_order,
			min(speculation_goal_difference) as speculation_goal_difference,
			min(speculation_goal_inner_outer) as speculation_goal_inner_outer,
			min(speculation_pace_mark) as speculation_pace_mark,
			min(distance_apptitude2) as distance_apptitude2,
			min(gate_weight) as gate_weight,
			min(gate_weight_delta) as gate_weight_delta,
			min(invalid_flag) as invalid_flag,
			min(sex) as sex,
			min(owner_name) as owner_name,
			min(ownersclub_code) as ownersclub_code,
			min(horse_mark_code) as horse_mark_code,
			min(passion_order) as passion_order,
			min(ls_index_order) as ls_index_order,
			min(ten_index_ranking) as ten_index_ranking,
			min(pace_index_ranking) as pace_index_ranking,
			min(uptone_index_ranking) as uptone_index_ranking,
			min(position_index_ranking) as position_index_ranking,
			min(jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate,
			min(jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate,
			min(transfer_type) as transfer_type,
			min(running_type) as running_type,
			min(figure) as figure,
			min(figure_impression1) as figure_impression1,
			min(figure_impression2) as figure_impression2,
			min(figure_impression3) as figure_impression3,
			min(horse_memo1) as horse_memo1,
			min(horse_memo2) as horse_memo2,
			min(horse_memo3) as horse_memo3,
			min(reference_start_index) as reference_start_index,
			min(reference_rate_of_delay) as reference_rate_of_delay,
			min(reference_previous_race) as reference_previous_race,
			min(reference_previous_race_jockey_code) as reference_previous_race_jockey_code,
			min(million_index) as million_index,
			min(million_mark) as million_mark,
			min(demoted_flag) as demoted_flag,
			min(passion_type) as passion_type,
			min(suspended_reason_code) as suspended_reason_code,
			min(flag) as flag,
			min(apprenticeship_round_count) as apprenticeship_round_count,
			min(apprenticeship_date) as apprenticeship_date,
			min(apprenticeship_day_count) as apprenticeship_day_count,
			min(grazing) as grazing,
			min(grazing_ranking) as grazing_ranking,
			min(stable_rank) as stable_rank,
			min(reserve_7) as reserve_7,
			min(crlf) as crlf
		) as min_values,
	struct
		(
			avg(safe_cast(race_key_place_code as numeric)) as race_key_place_code,
			avg(safe_cast(race_key_year as numeric)) as race_key_year,
			avg(safe_cast(race_key_no as numeric)) as race_key_no,
			avg(safe_cast(race_key_day as numeric)) as race_key_day,
			avg(safe_cast(race_key_round as numeric)) as race_key_round,
			avg(safe_cast(horse_no as numeric)) as horse_no,
			avg(safe_cast(register_no as numeric)) as register_no,
			avg(safe_cast(horse_name as numeric)) as horse_name,
			avg(safe_cast(IDM as numeric)) as IDM,
			avg(safe_cast(jockey_index as numeric)) as jockey_index,
			avg(safe_cast(info_index as numeric)) as info_index,
			avg(safe_cast(reserve_1 as numeric)) as reserve_1,
			avg(safe_cast(reserve_2 as numeric)) as reserve_2,
			avg(safe_cast(reserve_3 as numeric)) as reserve_3,
			avg(safe_cast(comprehension_index as numeric)) as comprehension_index,
			avg(safe_cast(leg_status as numeric)) as leg_status,
			avg(safe_cast(distance_apptitude as numeric)) as distance_apptitude,
			avg(safe_cast(uptone_index as numeric)) as uptone_index,
			avg(safe_cast(rotation as numeric)) as rotation,
			avg(safe_cast(basis_odds as numeric)) as basis_odds,
			avg(safe_cast(basis_reputation_order as numeric)) as basis_reputation_order,
			avg(safe_cast(basis_multiple_odds as numeric)) as basis_multiple_odds,
			avg(safe_cast(basis_multiple_reputation_order as numeric)) as basis_multiple_reputation_order,
			avg(safe_cast(specific_info_white_double_circle as numeric)) as specific_info_white_double_circle,
			avg(safe_cast(specific_info_white_circle as numeric)) as specific_info_white_circle,
			avg(safe_cast(specific_info_black_triangle as numeric)) as specific_info_black_triangle,
			avg(safe_cast(specific_info_white_triangle as numeric)) as specific_info_white_triangle,
			avg(safe_cast(specific_info_cross as numeric)) as specific_info_cross,
			avg(safe_cast(comprehension_info_double_circle as numeric)) as comprehension_info_double_circle,
			avg(safe_cast(comprehension_info_circle as numeric)) as comprehension_info_circle,
			avg(safe_cast(comprehension_info_black_triange as numeric)) as comprehension_info_black_triange,
			avg(safe_cast(comprehension_info_white_triange as numeric)) as comprehension_info_white_triange,
			avg(safe_cast(comprehension_info_cross as numeric)) as comprehension_info_cross,
			avg(safe_cast(reputation_index as numeric)) as reputation_index,
			avg(safe_cast(torture_index as numeric)) as torture_index,
			avg(safe_cast(stable_index as numeric)) as stable_index,
			avg(safe_cast(torture_arrow_code as numeric)) as torture_arrow_code,
			avg(safe_cast(stable_reputation_code as numeric)) as stable_reputation_code,
			avg(safe_cast(jockey_anticipated_serial_rate as numeric)) as jockey_anticipated_serial_rate,
			avg(safe_cast(passion_index as numeric)) as passion_index,
			avg(safe_cast(hoof as numeric)) as hoof,
			avg(safe_cast(weight_apptitude_code as numeric)) as weight_apptitude_code,
			avg(safe_cast(class_code as numeric)) as class_code,
			avg(safe_cast(reserve_4 as numeric)) as reserve_4,
			avg(safe_cast(blinker as numeric)) as blinker,
			avg(safe_cast(jockey_name as numeric)) as jockey_name,
			avg(safe_cast(load_weight as numeric)) as load_weight,
			avg(safe_cast(apprentice_type as numeric)) as apprentice_type,
			avg(safe_cast(torturer_name as numeric)) as torturer_name,
			avg(safe_cast(torturer_belonging as numeric)) as torturer_belonging,
			avg(safe_cast(other_data_key_previouse_performance_key1 as numeric)) as other_data_key_previouse_performance_key1,
			avg(safe_cast(other_data_key_previouse_performance_key2 as numeric)) as other_data_key_previouse_performance_key2,
			avg(safe_cast(other_data_key_previouse_performance_key3 as numeric)) as other_data_key_previouse_performance_key3,
			avg(safe_cast(other_data_key_previouse_performance_key4 as numeric)) as other_data_key_previouse_performance_key4,
			avg(safe_cast(other_data_key_previouse_performance_key5 as numeric)) as other_data_key_previouse_performance_key5,
			avg(safe_cast(other_data_key_previouse_race_key1 as numeric)) as other_data_key_previouse_race_key1,
			avg(safe_cast(other_data_key_previouse_race_key2 as numeric)) as other_data_key_previouse_race_key2,
			avg(safe_cast(other_data_key_previouse_race_key3 as numeric)) as other_data_key_previouse_race_key3,
			avg(safe_cast(other_data_key_previouse_race_key4 as numeric)) as other_data_key_previouse_race_key4,
			avg(safe_cast(other_data_key_previouse_race_key5 as numeric)) as other_data_key_previouse_race_key5,
			avg(safe_cast(gate_no as numeric)) as gate_no,
			avg(safe_cast(reserve_5 as numeric)) as reserve_5,
			avg(safe_cast(mark_code_comprehension as numeric)) as mark_code_comprehension,
			avg(safe_cast(mark_code_idm as numeric)) as mark_code_idm,
			avg(safe_cast(mark_code_info as numeric)) as mark_code_info,
			avg(safe_cast(mark_code_jockey as numeric)) as mark_code_jockey,
			avg(safe_cast(mark_code_stable as numeric)) as mark_code_stable,
			avg(safe_cast(mark_code_tourture as numeric)) as mark_code_tourture,
			avg(safe_cast(mark_code_passion as numeric)) as mark_code_passion,
			avg(safe_cast(grass_apptitude_code as numeric)) as grass_apptitude_code,
			avg(safe_cast(dart_aptitude as numeric)) as dart_aptitude,
			avg(safe_cast(jockey_code as numeric)) as jockey_code,
			avg(safe_cast(torturer_code as numeric)) as torturer_code,
			avg(safe_cast(reserve_6 as numeric)) as reserve_6,
			avg(safe_cast(prize_info_obtain_prize as numeric)) as prize_info_obtain_prize,
			avg(safe_cast(prize_info_profit as numeric)) as prize_info_profit,
			avg(safe_cast(prize_info_condition_class as numeric)) as prize_info_condition_class,
			avg(safe_cast(speculation_ten_index as numeric)) as speculation_ten_index,
			avg(safe_cast(speculation_pace_index as numeric)) as speculation_pace_index,
			avg(safe_cast(speculation_uptone_index as numeric)) as speculation_uptone_index,
			avg(safe_cast(speculation_position_index as numeric)) as speculation_position_index,
			avg(safe_cast(speculation_pace_speculation as numeric)) as speculation_pace_speculation,
			avg(safe_cast(speculation_following_middle_order as numeric)) as speculation_following_middle_order,
			avg(safe_cast(speculation_following_middle_difference as numeric)) as speculation_following_middle_difference,
			avg(safe_cast(speculation_following_middle_inner_outer as numeric)) as speculation_following_middle_inner_outer,
			avg(safe_cast(speculation_following_3F_order as numeric)) as speculation_following_3F_order,
			avg(safe_cast(speculation_following_3F_difference as numeric)) as speculation_following_3F_difference,
			avg(safe_cast(speculation_following_3F_inner_outer as numeric)) as speculation_following_3F_inner_outer,
			avg(safe_cast(speculation_goal_order as numeric)) as speculation_goal_order,
			avg(safe_cast(speculation_goal_difference as numeric)) as speculation_goal_difference,
			avg(safe_cast(speculation_goal_inner_outer as numeric)) as speculation_goal_inner_outer,
			avg(safe_cast(speculation_pace_mark as numeric)) as speculation_pace_mark,
			avg(safe_cast(distance_apptitude2 as numeric)) as distance_apptitude2,
			avg(safe_cast(gate_weight as numeric)) as gate_weight,
			avg(safe_cast(gate_weight_delta as numeric)) as gate_weight_delta,
			avg(safe_cast(invalid_flag as numeric)) as invalid_flag,
			avg(safe_cast(sex as numeric)) as sex,
			avg(safe_cast(owner_name as numeric)) as owner_name,
			avg(safe_cast(ownersclub_code as numeric)) as ownersclub_code,
			avg(safe_cast(horse_mark_code as numeric)) as horse_mark_code,
			avg(safe_cast(passion_order as numeric)) as passion_order,
			avg(safe_cast(ls_index_order as numeric)) as ls_index_order,
			avg(safe_cast(ten_index_ranking as numeric)) as ten_index_ranking,
			avg(safe_cast(pace_index_ranking as numeric)) as pace_index_ranking,
			avg(safe_cast(uptone_index_ranking as numeric)) as uptone_index_ranking,
			avg(safe_cast(position_index_ranking as numeric)) as position_index_ranking,
			avg(safe_cast(jockey_anticipated_winning_rate as numeric)) as jockey_anticipated_winning_rate,
			avg(safe_cast(jockey_anticipated_3rd_rate as numeric)) as jockey_anticipated_3rd_rate,
			avg(safe_cast(transfer_type as numeric)) as transfer_type,
			avg(safe_cast(running_type as numeric)) as running_type,
			avg(safe_cast(figure as numeric)) as figure,
			avg(safe_cast(figure_impression1 as numeric)) as figure_impression1,
			avg(safe_cast(figure_impression2 as numeric)) as figure_impression2,
			avg(safe_cast(figure_impression3 as numeric)) as figure_impression3,
			avg(safe_cast(horse_memo1 as numeric)) as horse_memo1,
			avg(safe_cast(horse_memo2 as numeric)) as horse_memo2,
			avg(safe_cast(horse_memo3 as numeric)) as horse_memo3,
			avg(safe_cast(reference_start_index as numeric)) as reference_start_index,
			avg(safe_cast(reference_rate_of_delay as numeric)) as reference_rate_of_delay,
			avg(safe_cast(reference_previous_race as numeric)) as reference_previous_race,
			avg(safe_cast(reference_previous_race_jockey_code as numeric)) as reference_previous_race_jockey_code,
			avg(safe_cast(million_index as numeric)) as million_index,
			avg(safe_cast(million_mark as numeric)) as million_mark,
			avg(safe_cast(demoted_flag as numeric)) as demoted_flag,
			avg(safe_cast(passion_type as numeric)) as passion_type,
			avg(safe_cast(suspended_reason_code as numeric)) as suspended_reason_code,
			avg(safe_cast(flag as numeric)) as flag,
			avg(safe_cast(apprenticeship_round_count as numeric)) as apprenticeship_round_count,
			avg(safe_cast(apprenticeship_date as numeric)) as apprenticeship_date,
			avg(safe_cast(apprenticeship_day_count as numeric)) as apprenticeship_day_count,
			avg(safe_cast(grazing as numeric)) as grazing,
			avg(safe_cast(grazing_ranking as numeric)) as grazing_ranking,
			avg(safe_cast(stable_rank as numeric)) as stable_rank,
			avg(safe_cast(reserve_7 as numeric)) as reserve_7,
			avg(safe_cast(crlf as numeric)) as crlf
		) as avg_values,
	struct
		(
			stddev(safe_cast(race_key_place_code as numeric)) as race_key_place_code,
			stddev(safe_cast(race_key_year as numeric)) as race_key_year,
			stddev(safe_cast(race_key_no as numeric)) as race_key_no,
			stddev(safe_cast(race_key_day as numeric)) as race_key_day,
			stddev(safe_cast(race_key_round as numeric)) as race_key_round,
			stddev(safe_cast(horse_no as numeric)) as horse_no,
			stddev(safe_cast(register_no as numeric)) as register_no,
			stddev(safe_cast(horse_name as numeric)) as horse_name,
			stddev(safe_cast(IDM as numeric)) as IDM,
			stddev(safe_cast(jockey_index as numeric)) as jockey_index,
			stddev(safe_cast(info_index as numeric)) as info_index,
			stddev(safe_cast(reserve_1 as numeric)) as reserve_1,
			stddev(safe_cast(reserve_2 as numeric)) as reserve_2,
			stddev(safe_cast(reserve_3 as numeric)) as reserve_3,
			stddev(safe_cast(comprehension_index as numeric)) as comprehension_index,
			stddev(safe_cast(leg_status as numeric)) as leg_status,
			stddev(safe_cast(distance_apptitude as numeric)) as distance_apptitude,
			stddev(safe_cast(uptone_index as numeric)) as uptone_index,
			stddev(safe_cast(rotation as numeric)) as rotation,
			stddev(safe_cast(basis_odds as numeric)) as basis_odds,
			stddev(safe_cast(basis_reputation_order as numeric)) as basis_reputation_order,
			stddev(safe_cast(basis_multiple_odds as numeric)) as basis_multiple_odds,
			stddev(safe_cast(basis_multiple_reputation_order as numeric)) as basis_multiple_reputation_order,
			stddev(safe_cast(specific_info_white_double_circle as numeric)) as specific_info_white_double_circle,
			stddev(safe_cast(specific_info_white_circle as numeric)) as specific_info_white_circle,
			stddev(safe_cast(specific_info_black_triangle as numeric)) as specific_info_black_triangle,
			stddev(safe_cast(specific_info_white_triangle as numeric)) as specific_info_white_triangle,
			stddev(safe_cast(specific_info_cross as numeric)) as specific_info_cross,
			stddev(safe_cast(comprehension_info_double_circle as numeric)) as comprehension_info_double_circle,
			stddev(safe_cast(comprehension_info_circle as numeric)) as comprehension_info_circle,
			stddev(safe_cast(comprehension_info_black_triange as numeric)) as comprehension_info_black_triange,
			stddev(safe_cast(comprehension_info_white_triange as numeric)) as comprehension_info_white_triange,
			stddev(safe_cast(comprehension_info_cross as numeric)) as comprehension_info_cross,
			stddev(safe_cast(reputation_index as numeric)) as reputation_index,
			stddev(safe_cast(torture_index as numeric)) as torture_index,
			stddev(safe_cast(stable_index as numeric)) as stable_index,
			stddev(safe_cast(torture_arrow_code as numeric)) as torture_arrow_code,
			stddev(safe_cast(stable_reputation_code as numeric)) as stable_reputation_code,
			stddev(safe_cast(jockey_anticipated_serial_rate as numeric)) as jockey_anticipated_serial_rate,
			stddev(safe_cast(passion_index as numeric)) as passion_index,
			stddev(safe_cast(hoof as numeric)) as hoof,
			stddev(safe_cast(weight_apptitude_code as numeric)) as weight_apptitude_code,
			stddev(safe_cast(class_code as numeric)) as class_code,
			stddev(safe_cast(reserve_4 as numeric)) as reserve_4,
			stddev(safe_cast(blinker as numeric)) as blinker,
			stddev(safe_cast(jockey_name as numeric)) as jockey_name,
			stddev(safe_cast(load_weight as numeric)) as load_weight,
			stddev(safe_cast(apprentice_type as numeric)) as apprentice_type,
			stddev(safe_cast(torturer_name as numeric)) as torturer_name,
			stddev(safe_cast(torturer_belonging as numeric)) as torturer_belonging,
			stddev(safe_cast(other_data_key_previouse_performance_key1 as numeric)) as other_data_key_previouse_performance_key1,
			stddev(safe_cast(other_data_key_previouse_performance_key2 as numeric)) as other_data_key_previouse_performance_key2,
			stddev(safe_cast(other_data_key_previouse_performance_key3 as numeric)) as other_data_key_previouse_performance_key3,
			stddev(safe_cast(other_data_key_previouse_performance_key4 as numeric)) as other_data_key_previouse_performance_key4,
			stddev(safe_cast(other_data_key_previouse_performance_key5 as numeric)) as other_data_key_previouse_performance_key5,
			stddev(safe_cast(other_data_key_previouse_race_key1 as numeric)) as other_data_key_previouse_race_key1,
			stddev(safe_cast(other_data_key_previouse_race_key2 as numeric)) as other_data_key_previouse_race_key2,
			stddev(safe_cast(other_data_key_previouse_race_key3 as numeric)) as other_data_key_previouse_race_key3,
			stddev(safe_cast(other_data_key_previouse_race_key4 as numeric)) as other_data_key_previouse_race_key4,
			stddev(safe_cast(other_data_key_previouse_race_key5 as numeric)) as other_data_key_previouse_race_key5,
			stddev(safe_cast(gate_no as numeric)) as gate_no,
			stddev(safe_cast(reserve_5 as numeric)) as reserve_5,
			stddev(safe_cast(mark_code_comprehension as numeric)) as mark_code_comprehension,
			stddev(safe_cast(mark_code_idm as numeric)) as mark_code_idm,
			stddev(safe_cast(mark_code_info as numeric)) as mark_code_info,
			stddev(safe_cast(mark_code_jockey as numeric)) as mark_code_jockey,
			stddev(safe_cast(mark_code_stable as numeric)) as mark_code_stable,
			stddev(safe_cast(mark_code_tourture as numeric)) as mark_code_tourture,
			stddev(safe_cast(mark_code_passion as numeric)) as mark_code_passion,
			stddev(safe_cast(grass_apptitude_code as numeric)) as grass_apptitude_code,
			stddev(safe_cast(dart_aptitude as numeric)) as dart_aptitude,
			stddev(safe_cast(jockey_code as numeric)) as jockey_code,
			stddev(safe_cast(torturer_code as numeric)) as torturer_code,
			stddev(safe_cast(reserve_6 as numeric)) as reserve_6,
			stddev(safe_cast(prize_info_obtain_prize as numeric)) as prize_info_obtain_prize,
			stddev(safe_cast(prize_info_profit as numeric)) as prize_info_profit,
			stddev(safe_cast(prize_info_condition_class as numeric)) as prize_info_condition_class,
			stddev(safe_cast(speculation_ten_index as numeric)) as speculation_ten_index,
			stddev(safe_cast(speculation_pace_index as numeric)) as speculation_pace_index,
			stddev(safe_cast(speculation_uptone_index as numeric)) as speculation_uptone_index,
			stddev(safe_cast(speculation_position_index as numeric)) as speculation_position_index,
			stddev(safe_cast(speculation_pace_speculation as numeric)) as speculation_pace_speculation,
			stddev(safe_cast(speculation_following_middle_order as numeric)) as speculation_following_middle_order,
			stddev(safe_cast(speculation_following_middle_difference as numeric)) as speculation_following_middle_difference,
			stddev(safe_cast(speculation_following_middle_inner_outer as numeric)) as speculation_following_middle_inner_outer,
			stddev(safe_cast(speculation_following_3F_order as numeric)) as speculation_following_3F_order,
			stddev(safe_cast(speculation_following_3F_difference as numeric)) as speculation_following_3F_difference,
			stddev(safe_cast(speculation_following_3F_inner_outer as numeric)) as speculation_following_3F_inner_outer,
			stddev(safe_cast(speculation_goal_order as numeric)) as speculation_goal_order,
			stddev(safe_cast(speculation_goal_difference as numeric)) as speculation_goal_difference,
			stddev(safe_cast(speculation_goal_inner_outer as numeric)) as speculation_goal_inner_outer,
			stddev(safe_cast(speculation_pace_mark as numeric)) as speculation_pace_mark,
			stddev(safe_cast(distance_apptitude2 as numeric)) as distance_apptitude2,
			stddev(safe_cast(gate_weight as numeric)) as gate_weight,
			stddev(safe_cast(gate_weight_delta as numeric)) as gate_weight_delta,
			stddev(safe_cast(invalid_flag as numeric)) as invalid_flag,
			stddev(safe_cast(sex as numeric)) as sex,
			stddev(safe_cast(owner_name as numeric)) as owner_name,
			stddev(safe_cast(ownersclub_code as numeric)) as ownersclub_code,
			stddev(safe_cast(horse_mark_code as numeric)) as horse_mark_code,
			stddev(safe_cast(passion_order as numeric)) as passion_order,
			stddev(safe_cast(ls_index_order as numeric)) as ls_index_order,
			stddev(safe_cast(ten_index_ranking as numeric)) as ten_index_ranking,
			stddev(safe_cast(pace_index_ranking as numeric)) as pace_index_ranking,
			stddev(safe_cast(uptone_index_ranking as numeric)) as uptone_index_ranking,
			stddev(safe_cast(position_index_ranking as numeric)) as position_index_ranking,
			stddev(safe_cast(jockey_anticipated_winning_rate as numeric)) as jockey_anticipated_winning_rate,
			stddev(safe_cast(jockey_anticipated_3rd_rate as numeric)) as jockey_anticipated_3rd_rate,
			stddev(safe_cast(transfer_type as numeric)) as transfer_type,
			stddev(safe_cast(running_type as numeric)) as running_type,
			stddev(safe_cast(figure as numeric)) as figure,
			stddev(safe_cast(figure_impression1 as numeric)) as figure_impression1,
			stddev(safe_cast(figure_impression2 as numeric)) as figure_impression2,
			stddev(safe_cast(figure_impression3 as numeric)) as figure_impression3,
			stddev(safe_cast(horse_memo1 as numeric)) as horse_memo1,
			stddev(safe_cast(horse_memo2 as numeric)) as horse_memo2,
			stddev(safe_cast(horse_memo3 as numeric)) as horse_memo3,
			stddev(safe_cast(reference_start_index as numeric)) as reference_start_index,
			stddev(safe_cast(reference_rate_of_delay as numeric)) as reference_rate_of_delay,
			stddev(safe_cast(reference_previous_race as numeric)) as reference_previous_race,
			stddev(safe_cast(reference_previous_race_jockey_code as numeric)) as reference_previous_race_jockey_code,
			stddev(safe_cast(million_index as numeric)) as million_index,
			stddev(safe_cast(million_mark as numeric)) as million_mark,
			stddev(safe_cast(demoted_flag as numeric)) as demoted_flag,
			stddev(safe_cast(passion_type as numeric)) as passion_type,
			stddev(safe_cast(suspended_reason_code as numeric)) as suspended_reason_code,
			stddev(safe_cast(flag as numeric)) as flag,
			stddev(safe_cast(apprenticeship_round_count as numeric)) as apprenticeship_round_count,
			stddev(safe_cast(apprenticeship_date as numeric)) as apprenticeship_date,
			stddev(safe_cast(apprenticeship_day_count as numeric)) as apprenticeship_day_count,
			stddev(safe_cast(grazing as numeric)) as grazing,
			stddev(safe_cast(grazing_ranking as numeric)) as grazing_ranking,
			stddev(safe_cast(stable_rank as numeric)) as stable_rank,
			stddev(safe_cast(reserve_7 as numeric)) as reserve_7,
			stddev(safe_cast(crlf as numeric)) as crlf
		) as stddev_values,
	struct
		(
			countif(safe_cast(race_key_place_code as numeric) = 0) as race_key_place_code,
			countif(safe_cast(race_key_year as numeric) = 0) as race_key_year,
			countif(safe_cast(race_key_no as numeric) = 0) as race_key_no,
			countif(safe_cast(race_key_day as numeric) = 0) as race_key_day,
			countif(safe_cast(race_key_round as numeric) = 0) as race_key_round,
			countif(safe_cast(horse_no as numeric) = 0) as horse_no,
			countif(safe_cast(register_no as numeric) = 0) as register_no,
			countif(safe_cast(horse_name as numeric) = 0) as horse_name,
			countif(safe_cast(IDM as numeric) = 0) as IDM,
			countif(safe_cast(jockey_index as numeric) = 0) as jockey_index,
			countif(safe_cast(info_index as numeric) = 0) as info_index,
			countif(safe_cast(reserve_1 as numeric) = 0) as reserve_1,
			countif(safe_cast(reserve_2 as numeric) = 0) as reserve_2,
			countif(safe_cast(reserve_3 as numeric) = 0) as reserve_3,
			countif(safe_cast(comprehension_index as numeric) = 0) as comprehension_index,
			countif(safe_cast(leg_status as numeric) = 0) as leg_status,
			countif(safe_cast(distance_apptitude as numeric) = 0) as distance_apptitude,
			countif(safe_cast(uptone_index as numeric) = 0) as uptone_index,
			countif(safe_cast(rotation as numeric) = 0) as rotation,
			countif(safe_cast(basis_odds as numeric) = 0) as basis_odds,
			countif(safe_cast(basis_reputation_order as numeric) = 0) as basis_reputation_order,
			countif(safe_cast(basis_multiple_odds as numeric) = 0) as basis_multiple_odds,
			countif(safe_cast(basis_multiple_reputation_order as numeric) = 0) as basis_multiple_reputation_order,
			countif(safe_cast(specific_info_white_double_circle as numeric) = 0) as specific_info_white_double_circle,
			countif(safe_cast(specific_info_white_circle as numeric) = 0) as specific_info_white_circle,
			countif(safe_cast(specific_info_black_triangle as numeric) = 0) as specific_info_black_triangle,
			countif(safe_cast(specific_info_white_triangle as numeric) = 0) as specific_info_white_triangle,
			countif(safe_cast(specific_info_cross as numeric) = 0) as specific_info_cross,
			countif(safe_cast(comprehension_info_double_circle as numeric) = 0) as comprehension_info_double_circle,
			countif(safe_cast(comprehension_info_circle as numeric) = 0) as comprehension_info_circle,
			countif(safe_cast(comprehension_info_black_triange as numeric) = 0) as comprehension_info_black_triange,
			countif(safe_cast(comprehension_info_white_triange as numeric) = 0) as comprehension_info_white_triange,
			countif(safe_cast(comprehension_info_cross as numeric) = 0) as comprehension_info_cross,
			countif(safe_cast(reputation_index as numeric) = 0) as reputation_index,
			countif(safe_cast(torture_index as numeric) = 0) as torture_index,
			countif(safe_cast(stable_index as numeric) = 0) as stable_index,
			countif(safe_cast(torture_arrow_code as numeric) = 0) as torture_arrow_code,
			countif(safe_cast(stable_reputation_code as numeric) = 0) as stable_reputation_code,
			countif(safe_cast(jockey_anticipated_serial_rate as numeric) = 0) as jockey_anticipated_serial_rate,
			countif(safe_cast(passion_index as numeric) = 0) as passion_index,
			countif(safe_cast(hoof as numeric) = 0) as hoof,
			countif(safe_cast(weight_apptitude_code as numeric) = 0) as weight_apptitude_code,
			countif(safe_cast(class_code as numeric) = 0) as class_code,
			countif(safe_cast(reserve_4 as numeric) = 0) as reserve_4,
			countif(safe_cast(blinker as numeric) = 0) as blinker,
			countif(safe_cast(jockey_name as numeric) = 0) as jockey_name,
			countif(safe_cast(load_weight as numeric) = 0) as load_weight,
			countif(safe_cast(apprentice_type as numeric) = 0) as apprentice_type,
			countif(safe_cast(torturer_name as numeric) = 0) as torturer_name,
			countif(safe_cast(torturer_belonging as numeric) = 0) as torturer_belonging,
			countif(safe_cast(other_data_key_previouse_performance_key1 as numeric) = 0) as other_data_key_previouse_performance_key1,
			countif(safe_cast(other_data_key_previouse_performance_key2 as numeric) = 0) as other_data_key_previouse_performance_key2,
			countif(safe_cast(other_data_key_previouse_performance_key3 as numeric) = 0) as other_data_key_previouse_performance_key3,
			countif(safe_cast(other_data_key_previouse_performance_key4 as numeric) = 0) as other_data_key_previouse_performance_key4,
			countif(safe_cast(other_data_key_previouse_performance_key5 as numeric) = 0) as other_data_key_previouse_performance_key5,
			countif(safe_cast(other_data_key_previouse_race_key1 as numeric) = 0) as other_data_key_previouse_race_key1,
			countif(safe_cast(other_data_key_previouse_race_key2 as numeric) = 0) as other_data_key_previouse_race_key2,
			countif(safe_cast(other_data_key_previouse_race_key3 as numeric) = 0) as other_data_key_previouse_race_key3,
			countif(safe_cast(other_data_key_previouse_race_key4 as numeric) = 0) as other_data_key_previouse_race_key4,
			countif(safe_cast(other_data_key_previouse_race_key5 as numeric) = 0) as other_data_key_previouse_race_key5,
			countif(safe_cast(gate_no as numeric) = 0) as gate_no,
			countif(safe_cast(reserve_5 as numeric) = 0) as reserve_5,
			countif(safe_cast(mark_code_comprehension as numeric) = 0) as mark_code_comprehension,
			countif(safe_cast(mark_code_idm as numeric) = 0) as mark_code_idm,
			countif(safe_cast(mark_code_info as numeric) = 0) as mark_code_info,
			countif(safe_cast(mark_code_jockey as numeric) = 0) as mark_code_jockey,
			countif(safe_cast(mark_code_stable as numeric) = 0) as mark_code_stable,
			countif(safe_cast(mark_code_tourture as numeric) = 0) as mark_code_tourture,
			countif(safe_cast(mark_code_passion as numeric) = 0) as mark_code_passion,
			countif(safe_cast(grass_apptitude_code as numeric) = 0) as grass_apptitude_code,
			countif(safe_cast(dart_aptitude as numeric) = 0) as dart_aptitude,
			countif(safe_cast(jockey_code as numeric) = 0) as jockey_code,
			countif(safe_cast(torturer_code as numeric) = 0) as torturer_code,
			countif(safe_cast(reserve_6 as numeric) = 0) as reserve_6,
			countif(safe_cast(prize_info_obtain_prize as numeric) = 0) as prize_info_obtain_prize,
			countif(safe_cast(prize_info_profit as numeric) = 0) as prize_info_profit,
			countif(safe_cast(prize_info_condition_class as numeric) = 0) as prize_info_condition_class,
			countif(safe_cast(speculation_ten_index as numeric) = 0) as speculation_ten_index,
			countif(safe_cast(speculation_pace_index as numeric) = 0) as speculation_pace_index,
			countif(safe_cast(speculation_uptone_index as numeric) = 0) as speculation_uptone_index,
			countif(safe_cast(speculation_position_index as numeric) = 0) as speculation_position_index,
			countif(safe_cast(speculation_pace_speculation as numeric) = 0) as speculation_pace_speculation,
			countif(safe_cast(speculation_following_middle_order as numeric) = 0) as speculation_following_middle_order,
			countif(safe_cast(speculation_following_middle_difference as numeric) = 0) as speculation_following_middle_difference,
			countif(safe_cast(speculation_following_middle_inner_outer as numeric) = 0) as speculation_following_middle_inner_outer,
			countif(safe_cast(speculation_following_3F_order as numeric) = 0) as speculation_following_3F_order,
			countif(safe_cast(speculation_following_3F_difference as numeric) = 0) as speculation_following_3F_difference,
			countif(safe_cast(speculation_following_3F_inner_outer as numeric) = 0) as speculation_following_3F_inner_outer,
			countif(safe_cast(speculation_goal_order as numeric) = 0) as speculation_goal_order,
			countif(safe_cast(speculation_goal_difference as numeric) = 0) as speculation_goal_difference,
			countif(safe_cast(speculation_goal_inner_outer as numeric) = 0) as speculation_goal_inner_outer,
			countif(safe_cast(speculation_pace_mark as numeric) = 0) as speculation_pace_mark,
			countif(safe_cast(distance_apptitude2 as numeric) = 0) as distance_apptitude2,
			countif(safe_cast(gate_weight as numeric) = 0) as gate_weight,
			countif(safe_cast(gate_weight_delta as numeric) = 0) as gate_weight_delta,
			countif(safe_cast(invalid_flag as numeric) = 0) as invalid_flag,
			countif(safe_cast(sex as numeric) = 0) as sex,
			countif(safe_cast(owner_name as numeric) = 0) as owner_name,
			countif(safe_cast(ownersclub_code as numeric) = 0) as ownersclub_code,
			countif(safe_cast(horse_mark_code as numeric) = 0) as horse_mark_code,
			countif(safe_cast(passion_order as numeric) = 0) as passion_order,
			countif(safe_cast(ls_index_order as numeric) = 0) as ls_index_order,
			countif(safe_cast(ten_index_ranking as numeric) = 0) as ten_index_ranking,
			countif(safe_cast(pace_index_ranking as numeric) = 0) as pace_index_ranking,
			countif(safe_cast(uptone_index_ranking as numeric) = 0) as uptone_index_ranking,
			countif(safe_cast(position_index_ranking as numeric) = 0) as position_index_ranking,
			countif(safe_cast(jockey_anticipated_winning_rate as numeric) = 0) as jockey_anticipated_winning_rate,
			countif(safe_cast(jockey_anticipated_3rd_rate as numeric) = 0) as jockey_anticipated_3rd_rate,
			countif(safe_cast(transfer_type as numeric) = 0) as transfer_type,
			countif(safe_cast(running_type as numeric) = 0) as running_type,
			countif(safe_cast(figure as numeric) = 0) as figure,
			countif(safe_cast(figure_impression1 as numeric) = 0) as figure_impression1,
			countif(safe_cast(figure_impression2 as numeric) = 0) as figure_impression2,
			countif(safe_cast(figure_impression3 as numeric) = 0) as figure_impression3,
			countif(safe_cast(horse_memo1 as numeric) = 0) as horse_memo1,
			countif(safe_cast(horse_memo2 as numeric) = 0) as horse_memo2,
			countif(safe_cast(horse_memo3 as numeric) = 0) as horse_memo3,
			countif(safe_cast(reference_start_index as numeric) = 0) as reference_start_index,
			countif(safe_cast(reference_rate_of_delay as numeric) = 0) as reference_rate_of_delay,
			countif(safe_cast(reference_previous_race as numeric) = 0) as reference_previous_race,
			countif(safe_cast(reference_previous_race_jockey_code as numeric) = 0) as reference_previous_race_jockey_code,
			countif(safe_cast(million_index as numeric) = 0) as million_index,
			countif(safe_cast(million_mark as numeric) = 0) as million_mark,
			countif(safe_cast(demoted_flag as numeric) = 0) as demoted_flag,
			countif(safe_cast(passion_type as numeric) = 0) as passion_type,
			countif(safe_cast(suspended_reason_code as numeric) = 0) as suspended_reason_code,
			countif(safe_cast(flag as numeric) = 0) as flag,
			countif(safe_cast(apprenticeship_round_count as numeric) = 0) as apprenticeship_round_count,
			countif(safe_cast(apprenticeship_date as numeric) = 0) as apprenticeship_date,
			countif(safe_cast(apprenticeship_day_count as numeric) = 0) as apprenticeship_day_count,
			countif(safe_cast(grazing as numeric) = 0) as grazing,
			countif(safe_cast(grazing_ranking as numeric) = 0) as grazing_ranking,
			countif(safe_cast(stable_rank as numeric) = 0) as stable_rank,
			countif(safe_cast(reserve_7 as numeric) = 0) as reserve_7,
			countif(safe_cast(crlf as numeric) = 0) as crlf
		) as num_zero,
	struct
		(
			countif(race_key_place_code is null) as race_key_place_code,
			countif(race_key_year is null) as race_key_year,
			countif(race_key_no is null) as race_key_no,
			countif(race_key_day is null) as race_key_day,
			countif(race_key_round is null) as race_key_round,
			countif(horse_no is null) as horse_no,
			countif(register_no is null) as register_no,
			countif(horse_name is null) as horse_name,
			countif(IDM is null) as IDM,
			countif(jockey_index is null) as jockey_index,
			countif(info_index is null) as info_index,
			countif(reserve_1 is null) as reserve_1,
			countif(reserve_2 is null) as reserve_2,
			countif(reserve_3 is null) as reserve_3,
			countif(comprehension_index is null) as comprehension_index,
			countif(leg_status is null) as leg_status,
			countif(distance_apptitude is null) as distance_apptitude,
			countif(uptone_index is null) as uptone_index,
			countif(rotation is null) as rotation,
			countif(basis_odds is null) as basis_odds,
			countif(basis_reputation_order is null) as basis_reputation_order,
			countif(basis_multiple_odds is null) as basis_multiple_odds,
			countif(basis_multiple_reputation_order is null) as basis_multiple_reputation_order,
			countif(specific_info_white_double_circle is null) as specific_info_white_double_circle,
			countif(specific_info_white_circle is null) as specific_info_white_circle,
			countif(specific_info_black_triangle is null) as specific_info_black_triangle,
			countif(specific_info_white_triangle is null) as specific_info_white_triangle,
			countif(specific_info_cross is null) as specific_info_cross,
			countif(comprehension_info_double_circle is null) as comprehension_info_double_circle,
			countif(comprehension_info_circle is null) as comprehension_info_circle,
			countif(comprehension_info_black_triange is null) as comprehension_info_black_triange,
			countif(comprehension_info_white_triange is null) as comprehension_info_white_triange,
			countif(comprehension_info_cross is null) as comprehension_info_cross,
			countif(reputation_index is null) as reputation_index,
			countif(torture_index is null) as torture_index,
			countif(stable_index is null) as stable_index,
			countif(torture_arrow_code is null) as torture_arrow_code,
			countif(stable_reputation_code is null) as stable_reputation_code,
			countif(jockey_anticipated_serial_rate is null) as jockey_anticipated_serial_rate,
			countif(passion_index is null) as passion_index,
			countif(hoof is null) as hoof,
			countif(weight_apptitude_code is null) as weight_apptitude_code,
			countif(class_code is null) as class_code,
			countif(reserve_4 is null) as reserve_4,
			countif(blinker is null) as blinker,
			countif(jockey_name is null) as jockey_name,
			countif(load_weight is null) as load_weight,
			countif(apprentice_type is null) as apprentice_type,
			countif(torturer_name is null) as torturer_name,
			countif(torturer_belonging is null) as torturer_belonging,
			countif(other_data_key_previouse_performance_key1 is null) as other_data_key_previouse_performance_key1,
			countif(other_data_key_previouse_performance_key2 is null) as other_data_key_previouse_performance_key2,
			countif(other_data_key_previouse_performance_key3 is null) as other_data_key_previouse_performance_key3,
			countif(other_data_key_previouse_performance_key4 is null) as other_data_key_previouse_performance_key4,
			countif(other_data_key_previouse_performance_key5 is null) as other_data_key_previouse_performance_key5,
			countif(other_data_key_previouse_race_key1 is null) as other_data_key_previouse_race_key1,
			countif(other_data_key_previouse_race_key2 is null) as other_data_key_previouse_race_key2,
			countif(other_data_key_previouse_race_key3 is null) as other_data_key_previouse_race_key3,
			countif(other_data_key_previouse_race_key4 is null) as other_data_key_previouse_race_key4,
			countif(other_data_key_previouse_race_key5 is null) as other_data_key_previouse_race_key5,
			countif(gate_no is null) as gate_no,
			countif(reserve_5 is null) as reserve_5,
			countif(mark_code_comprehension is null) as mark_code_comprehension,
			countif(mark_code_idm is null) as mark_code_idm,
			countif(mark_code_info is null) as mark_code_info,
			countif(mark_code_jockey is null) as mark_code_jockey,
			countif(mark_code_stable is null) as mark_code_stable,
			countif(mark_code_tourture is null) as mark_code_tourture,
			countif(mark_code_passion is null) as mark_code_passion,
			countif(grass_apptitude_code is null) as grass_apptitude_code,
			countif(dart_aptitude is null) as dart_aptitude,
			countif(jockey_code is null) as jockey_code,
			countif(torturer_code is null) as torturer_code,
			countif(reserve_6 is null) as reserve_6,
			countif(prize_info_obtain_prize is null) as prize_info_obtain_prize,
			countif(prize_info_profit is null) as prize_info_profit,
			countif(prize_info_condition_class is null) as prize_info_condition_class,
			countif(speculation_ten_index is null) as speculation_ten_index,
			countif(speculation_pace_index is null) as speculation_pace_index,
			countif(speculation_uptone_index is null) as speculation_uptone_index,
			countif(speculation_position_index is null) as speculation_position_index,
			countif(speculation_pace_speculation is null) as speculation_pace_speculation,
			countif(speculation_following_middle_order is null) as speculation_following_middle_order,
			countif(speculation_following_middle_difference is null) as speculation_following_middle_difference,
			countif(speculation_following_middle_inner_outer is null) as speculation_following_middle_inner_outer,
			countif(speculation_following_3F_order is null) as speculation_following_3F_order,
			countif(speculation_following_3F_difference is null) as speculation_following_3F_difference,
			countif(speculation_following_3F_inner_outer is null) as speculation_following_3F_inner_outer,
			countif(speculation_goal_order is null) as speculation_goal_order,
			countif(speculation_goal_difference is null) as speculation_goal_difference,
			countif(speculation_goal_inner_outer is null) as speculation_goal_inner_outer,
			countif(speculation_pace_mark is null) as speculation_pace_mark,
			countif(distance_apptitude2 is null) as distance_apptitude2,
			countif(gate_weight is null) as gate_weight,
			countif(gate_weight_delta is null) as gate_weight_delta,
			countif(invalid_flag is null) as invalid_flag,
			countif(sex is null) as sex,
			countif(owner_name is null) as owner_name,
			countif(ownersclub_code is null) as ownersclub_code,
			countif(horse_mark_code is null) as horse_mark_code,
			countif(passion_order is null) as passion_order,
			countif(ls_index_order is null) as ls_index_order,
			countif(ten_index_ranking is null) as ten_index_ranking,
			countif(pace_index_ranking is null) as pace_index_ranking,
			countif(uptone_index_ranking is null) as uptone_index_ranking,
			countif(position_index_ranking is null) as position_index_ranking,
			countif(jockey_anticipated_winning_rate is null) as jockey_anticipated_winning_rate,
			countif(jockey_anticipated_3rd_rate is null) as jockey_anticipated_3rd_rate,
			countif(transfer_type is null) as transfer_type,
			countif(running_type is null) as running_type,
			countif(figure is null) as figure,
			countif(figure_impression1 is null) as figure_impression1,
			countif(figure_impression2 is null) as figure_impression2,
			countif(figure_impression3 is null) as figure_impression3,
			countif(horse_memo1 is null) as horse_memo1,
			countif(horse_memo2 is null) as horse_memo2,
			countif(horse_memo3 is null) as horse_memo3,
			countif(reference_start_index is null) as reference_start_index,
			countif(reference_rate_of_delay is null) as reference_rate_of_delay,
			countif(reference_previous_race is null) as reference_previous_race,
			countif(reference_previous_race_jockey_code is null) as reference_previous_race_jockey_code,
			countif(million_index is null) as million_index,
			countif(million_mark is null) as million_mark,
			countif(demoted_flag is null) as demoted_flag,
			countif(passion_type is null) as passion_type,
			countif(suspended_reason_code is null) as suspended_reason_code,
			countif(flag is null) as flag,
			countif(apprenticeship_round_count is null) as apprenticeship_round_count,
			countif(apprenticeship_date is null) as apprenticeship_date,
			countif(apprenticeship_day_count is null) as apprenticeship_day_count,
			countif(grazing is null) as grazing,
			countif(grazing_ranking is null) as grazing_ranking,
			countif(stable_rank is null) as stable_rank,
			countif(reserve_7 is null) as reserve_7,
			countif(crlf is null) as crlf
		) as num_null,
	struct
		(
			max(without_error.race_key_place_code) as race_key_place_code,
			max(without_error.race_key_year) as race_key_year,
			max(without_error.race_key_no) as race_key_no,
			max(without_error.race_key_day) as race_key_day,
			max(without_error.race_key_round) as race_key_round,
			max(without_error.horse_no) as horse_no,
			max(without_error.register_no) as register_no,
			max(without_error.horse_name) as horse_name,
			max(without_error.IDM) as IDM,
			max(without_error.jockey_index) as jockey_index,
			max(without_error.info_index) as info_index,
			max(without_error.reserve_1) as reserve_1,
			max(without_error.reserve_2) as reserve_2,
			max(without_error.reserve_3) as reserve_3,
			max(without_error.comprehension_index) as comprehension_index,
			max(without_error.leg_status) as leg_status,
			max(without_error.distance_apptitude) as distance_apptitude,
			max(without_error.uptone_index) as uptone_index,
			max(without_error.rotation) as rotation,
			max(without_error.basis_odds) as basis_odds,
			max(without_error.basis_reputation_order) as basis_reputation_order,
			max(without_error.basis_multiple_odds) as basis_multiple_odds,
			max(without_error.basis_multiple_reputation_order) as basis_multiple_reputation_order,
			max(without_error.specific_info_white_double_circle) as specific_info_white_double_circle,
			max(without_error.specific_info_white_circle) as specific_info_white_circle,
			max(without_error.specific_info_black_triangle) as specific_info_black_triangle,
			max(without_error.specific_info_white_triangle) as specific_info_white_triangle,
			max(without_error.specific_info_cross) as specific_info_cross,
			max(without_error.comprehension_info_double_circle) as comprehension_info_double_circle,
			max(without_error.comprehension_info_circle) as comprehension_info_circle,
			max(without_error.comprehension_info_black_triange) as comprehension_info_black_triange,
			max(without_error.comprehension_info_white_triange) as comprehension_info_white_triange,
			max(without_error.comprehension_info_cross) as comprehension_info_cross,
			max(without_error.reputation_index) as reputation_index,
			max(without_error.torture_index) as torture_index,
			max(without_error.stable_index) as stable_index,
			max(without_error.torture_arrow_code) as torture_arrow_code,
			max(without_error.stable_reputation_code) as stable_reputation_code,
			max(without_error.jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate,
			max(without_error.passion_index) as passion_index,
			max(without_error.hoof) as hoof,
			max(without_error.weight_apptitude_code) as weight_apptitude_code,
			max(without_error.class_code) as class_code,
			max(without_error.reserve_4) as reserve_4,
			max(without_error.blinker) as blinker,
			max(without_error.jockey_name) as jockey_name,
			max(without_error.load_weight) as load_weight,
			max(without_error.apprentice_type) as apprentice_type,
			max(without_error.torturer_name) as torturer_name,
			max(without_error.torturer_belonging) as torturer_belonging,
			max(without_error.other_data_key_previouse_performance_key1) as other_data_key_previouse_performance_key1,
			max(without_error.other_data_key_previouse_performance_key2) as other_data_key_previouse_performance_key2,
			max(without_error.other_data_key_previouse_performance_key3) as other_data_key_previouse_performance_key3,
			max(without_error.other_data_key_previouse_performance_key4) as other_data_key_previouse_performance_key4,
			max(without_error.other_data_key_previouse_performance_key5) as other_data_key_previouse_performance_key5,
			max(without_error.other_data_key_previouse_race_key1) as other_data_key_previouse_race_key1,
			max(without_error.other_data_key_previouse_race_key2) as other_data_key_previouse_race_key2,
			max(without_error.other_data_key_previouse_race_key3) as other_data_key_previouse_race_key3,
			max(without_error.other_data_key_previouse_race_key4) as other_data_key_previouse_race_key4,
			max(without_error.other_data_key_previouse_race_key5) as other_data_key_previouse_race_key5,
			max(without_error.gate_no) as gate_no,
			max(without_error.reserve_5) as reserve_5,
			max(without_error.mark_code_comprehension) as mark_code_comprehension,
			max(without_error.mark_code_idm) as mark_code_idm,
			max(without_error.mark_code_info) as mark_code_info,
			max(without_error.mark_code_jockey) as mark_code_jockey,
			max(without_error.mark_code_stable) as mark_code_stable,
			max(without_error.mark_code_tourture) as mark_code_tourture,
			max(without_error.mark_code_passion) as mark_code_passion,
			max(without_error.grass_apptitude_code) as grass_apptitude_code,
			max(without_error.dart_aptitude) as dart_aptitude,
			max(without_error.jockey_code) as jockey_code,
			max(without_error.torturer_code) as torturer_code,
			max(without_error.reserve_6) as reserve_6,
			max(without_error.prize_info_obtain_prize) as prize_info_obtain_prize,
			max(without_error.prize_info_profit) as prize_info_profit,
			max(without_error.prize_info_condition_class) as prize_info_condition_class,
			max(without_error.speculation_ten_index) as speculation_ten_index,
			max(without_error.speculation_pace_index) as speculation_pace_index,
			max(without_error.speculation_uptone_index) as speculation_uptone_index,
			max(without_error.speculation_position_index) as speculation_position_index,
			max(without_error.speculation_pace_speculation) as speculation_pace_speculation,
			max(without_error.speculation_following_middle_order) as speculation_following_middle_order,
			max(without_error.speculation_following_middle_difference) as speculation_following_middle_difference,
			max(without_error.speculation_following_middle_inner_outer) as speculation_following_middle_inner_outer,
			max(without_error.speculation_following_3F_order) as speculation_following_3F_order,
			max(without_error.speculation_following_3F_difference) as speculation_following_3F_difference,
			max(without_error.speculation_following_3F_inner_outer) as speculation_following_3F_inner_outer,
			max(without_error.speculation_goal_order) as speculation_goal_order,
			max(without_error.speculation_goal_difference) as speculation_goal_difference,
			max(without_error.speculation_goal_inner_outer) as speculation_goal_inner_outer,
			max(without_error.speculation_pace_mark) as speculation_pace_mark,
			max(without_error.distance_apptitude2) as distance_apptitude2,
			max(without_error.gate_weight) as gate_weight,
			max(without_error.gate_weight_delta) as gate_weight_delta,
			max(without_error.invalid_flag) as invalid_flag,
			max(without_error.sex) as sex,
			max(without_error.owner_name) as owner_name,
			max(without_error.ownersclub_code) as ownersclub_code,
			max(without_error.horse_mark_code) as horse_mark_code,
			max(without_error.passion_order) as passion_order,
			max(without_error.ls_index_order) as ls_index_order,
			max(without_error.ten_index_ranking) as ten_index_ranking,
			max(without_error.pace_index_ranking) as pace_index_ranking,
			max(without_error.uptone_index_ranking) as uptone_index_ranking,
			max(without_error.position_index_ranking) as position_index_ranking,
			max(without_error.jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate,
			max(without_error.jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate,
			max(without_error.transfer_type) as transfer_type,
			max(without_error.running_type) as running_type,
			max(without_error.figure) as figure,
			max(without_error.figure_impression1) as figure_impression1,
			max(without_error.figure_impression2) as figure_impression2,
			max(without_error.figure_impression3) as figure_impression3,
			max(without_error.horse_memo1) as horse_memo1,
			max(without_error.horse_memo2) as horse_memo2,
			max(without_error.horse_memo3) as horse_memo3,
			max(without_error.reference_start_index) as reference_start_index,
			max(without_error.reference_rate_of_delay) as reference_rate_of_delay,
			max(without_error.reference_previous_race) as reference_previous_race,
			max(without_error.reference_previous_race_jockey_code) as reference_previous_race_jockey_code,
			max(without_error.million_index) as million_index,
			max(without_error.million_mark) as million_mark,
			max(without_error.demoted_flag) as demoted_flag,
			max(without_error.passion_type) as passion_type,
			max(without_error.suspended_reason_code) as suspended_reason_code,
			max(without_error.flag) as flag,
			max(without_error.apprenticeship_round_count) as apprenticeship_round_count,
			max(without_error.apprenticeship_date) as apprenticeship_date,
			max(without_error.apprenticeship_day_count) as apprenticeship_day_count,
			max(without_error.grazing) as grazing,
			max(without_error.grazing_ranking) as grazing_ranking,
			max(without_error.stable_rank) as stable_rank,
			max(without_error.reserve_7) as reserve_7,
			max(without_error.crlf) as crlf
		) as max_values_without_error,
	struct
		(
			min(without_error.race_key_place_code) as race_key_place_code,
			min(without_error.race_key_year) as race_key_year,
			min(without_error.race_key_no) as race_key_no,
			min(without_error.race_key_day) as race_key_day,
			min(without_error.race_key_round) as race_key_round,
			min(without_error.horse_no) as horse_no,
			min(without_error.register_no) as register_no,
			min(without_error.horse_name) as horse_name,
			min(without_error.IDM) as IDM,
			min(without_error.jockey_index) as jockey_index,
			min(without_error.info_index) as info_index,
			min(without_error.reserve_1) as reserve_1,
			min(without_error.reserve_2) as reserve_2,
			min(without_error.reserve_3) as reserve_3,
			min(without_error.comprehension_index) as comprehension_index,
			min(without_error.leg_status) as leg_status,
			min(without_error.distance_apptitude) as distance_apptitude,
			min(without_error.uptone_index) as uptone_index,
			min(without_error.rotation) as rotation,
			min(without_error.basis_odds) as basis_odds,
			min(without_error.basis_reputation_order) as basis_reputation_order,
			min(without_error.basis_multiple_odds) as basis_multiple_odds,
			min(without_error.basis_multiple_reputation_order) as basis_multiple_reputation_order,
			min(without_error.specific_info_white_double_circle) as specific_info_white_double_circle,
			min(without_error.specific_info_white_circle) as specific_info_white_circle,
			min(without_error.specific_info_black_triangle) as specific_info_black_triangle,
			min(without_error.specific_info_white_triangle) as specific_info_white_triangle,
			min(without_error.specific_info_cross) as specific_info_cross,
			min(without_error.comprehension_info_double_circle) as comprehension_info_double_circle,
			min(without_error.comprehension_info_circle) as comprehension_info_circle,
			min(without_error.comprehension_info_black_triange) as comprehension_info_black_triange,
			min(without_error.comprehension_info_white_triange) as comprehension_info_white_triange,
			min(without_error.comprehension_info_cross) as comprehension_info_cross,
			min(without_error.reputation_index) as reputation_index,
			min(without_error.torture_index) as torture_index,
			min(without_error.stable_index) as stable_index,
			min(without_error.torture_arrow_code) as torture_arrow_code,
			min(without_error.stable_reputation_code) as stable_reputation_code,
			min(without_error.jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate,
			min(without_error.passion_index) as passion_index,
			min(without_error.hoof) as hoof,
			min(without_error.weight_apptitude_code) as weight_apptitude_code,
			min(without_error.class_code) as class_code,
			min(without_error.reserve_4) as reserve_4,
			min(without_error.blinker) as blinker,
			min(without_error.jockey_name) as jockey_name,
			min(without_error.load_weight) as load_weight,
			min(without_error.apprentice_type) as apprentice_type,
			min(without_error.torturer_name) as torturer_name,
			min(without_error.torturer_belonging) as torturer_belonging,
			min(without_error.other_data_key_previouse_performance_key1) as other_data_key_previouse_performance_key1,
			min(without_error.other_data_key_previouse_performance_key2) as other_data_key_previouse_performance_key2,
			min(without_error.other_data_key_previouse_performance_key3) as other_data_key_previouse_performance_key3,
			min(without_error.other_data_key_previouse_performance_key4) as other_data_key_previouse_performance_key4,
			min(without_error.other_data_key_previouse_performance_key5) as other_data_key_previouse_performance_key5,
			min(without_error.other_data_key_previouse_race_key1) as other_data_key_previouse_race_key1,
			min(without_error.other_data_key_previouse_race_key2) as other_data_key_previouse_race_key2,
			min(without_error.other_data_key_previouse_race_key3) as other_data_key_previouse_race_key3,
			min(without_error.other_data_key_previouse_race_key4) as other_data_key_previouse_race_key4,
			min(without_error.other_data_key_previouse_race_key5) as other_data_key_previouse_race_key5,
			min(without_error.gate_no) as gate_no,
			min(without_error.reserve_5) as reserve_5,
			min(without_error.mark_code_comprehension) as mark_code_comprehension,
			min(without_error.mark_code_idm) as mark_code_idm,
			min(without_error.mark_code_info) as mark_code_info,
			min(without_error.mark_code_jockey) as mark_code_jockey,
			min(without_error.mark_code_stable) as mark_code_stable,
			min(without_error.mark_code_tourture) as mark_code_tourture,
			min(without_error.mark_code_passion) as mark_code_passion,
			min(without_error.grass_apptitude_code) as grass_apptitude_code,
			min(without_error.dart_aptitude) as dart_aptitude,
			min(without_error.jockey_code) as jockey_code,
			min(without_error.torturer_code) as torturer_code,
			min(without_error.reserve_6) as reserve_6,
			min(without_error.prize_info_obtain_prize) as prize_info_obtain_prize,
			min(without_error.prize_info_profit) as prize_info_profit,
			min(without_error.prize_info_condition_class) as prize_info_condition_class,
			min(without_error.speculation_ten_index) as speculation_ten_index,
			min(without_error.speculation_pace_index) as speculation_pace_index,
			min(without_error.speculation_uptone_index) as speculation_uptone_index,
			min(without_error.speculation_position_index) as speculation_position_index,
			min(without_error.speculation_pace_speculation) as speculation_pace_speculation,
			min(without_error.speculation_following_middle_order) as speculation_following_middle_order,
			min(without_error.speculation_following_middle_difference) as speculation_following_middle_difference,
			min(without_error.speculation_following_middle_inner_outer) as speculation_following_middle_inner_outer,
			min(without_error.speculation_following_3F_order) as speculation_following_3F_order,
			min(without_error.speculation_following_3F_difference) as speculation_following_3F_difference,
			min(without_error.speculation_following_3F_inner_outer) as speculation_following_3F_inner_outer,
			min(without_error.speculation_goal_order) as speculation_goal_order,
			min(without_error.speculation_goal_difference) as speculation_goal_difference,
			min(without_error.speculation_goal_inner_outer) as speculation_goal_inner_outer,
			min(without_error.speculation_pace_mark) as speculation_pace_mark,
			min(without_error.distance_apptitude2) as distance_apptitude2,
			min(without_error.gate_weight) as gate_weight,
			min(without_error.gate_weight_delta) as gate_weight_delta,
			min(without_error.invalid_flag) as invalid_flag,
			min(without_error.sex) as sex,
			min(without_error.owner_name) as owner_name,
			min(without_error.ownersclub_code) as ownersclub_code,
			min(without_error.horse_mark_code) as horse_mark_code,
			min(without_error.passion_order) as passion_order,
			min(without_error.ls_index_order) as ls_index_order,
			min(without_error.ten_index_ranking) as ten_index_ranking,
			min(without_error.pace_index_ranking) as pace_index_ranking,
			min(without_error.uptone_index_ranking) as uptone_index_ranking,
			min(without_error.position_index_ranking) as position_index_ranking,
			min(without_error.jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate,
			min(without_error.jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate,
			min(without_error.transfer_type) as transfer_type,
			min(without_error.running_type) as running_type,
			min(without_error.figure) as figure,
			min(without_error.figure_impression1) as figure_impression1,
			min(without_error.figure_impression2) as figure_impression2,
			min(without_error.figure_impression3) as figure_impression3,
			min(without_error.horse_memo1) as horse_memo1,
			min(without_error.horse_memo2) as horse_memo2,
			min(without_error.horse_memo3) as horse_memo3,
			min(without_error.reference_start_index) as reference_start_index,
			min(without_error.reference_rate_of_delay) as reference_rate_of_delay,
			min(without_error.reference_previous_race) as reference_previous_race,
			min(without_error.reference_previous_race_jockey_code) as reference_previous_race_jockey_code,
			min(without_error.million_index) as million_index,
			min(without_error.million_mark) as million_mark,
			min(without_error.demoted_flag) as demoted_flag,
			min(without_error.passion_type) as passion_type,
			min(without_error.suspended_reason_code) as suspended_reason_code,
			min(without_error.flag) as flag,
			min(without_error.apprenticeship_round_count) as apprenticeship_round_count,
			min(without_error.apprenticeship_date) as apprenticeship_date,
			min(without_error.apprenticeship_day_count) as apprenticeship_day_count,
			min(without_error.grazing) as grazing,
			min(without_error.grazing_ranking) as grazing_ranking,
			min(without_error.stable_rank) as stable_rank,
			min(without_error.reserve_7) as reserve_7,
			min(without_error.crlf) as crlf
		) as min_values_without_error
from 
	(
		select 
			race_key_place_code,
			race_key_year,
			race_key_no,
			race_key_day,
			race_key_round,
			horse_no,
			register_no,
			horse_name,
			IDM,
			jockey_index,
			info_index,
			reserve_1,
			reserve_2,
			reserve_3,
			comprehension_index,
			leg_status,
			distance_apptitude,
			uptone_index,
			rotation,
			basis_odds,
			basis_reputation_order,
			basis_multiple_odds,
			basis_multiple_reputation_order,
			specific_info_white_double_circle,
			specific_info_white_circle,
			specific_info_black_triangle,
			specific_info_white_triangle,
			specific_info_cross,
			comprehension_info_double_circle,
			comprehension_info_circle,
			comprehension_info_black_triange,
			comprehension_info_white_triange,
			comprehension_info_cross,
			reputation_index,
			torture_index,
			stable_index,
			torture_arrow_code,
			stable_reputation_code,
			jockey_anticipated_serial_rate,
			passion_index,
			hoof,
			weight_apptitude_code,
			class_code,
			reserve_4,
			blinker,
			jockey_name,
			load_weight,
			apprentice_type,
			torturer_name,
			torturer_belonging,
			other_data_key_previouse_performance_key1,
			other_data_key_previouse_performance_key2,
			other_data_key_previouse_performance_key3,
			other_data_key_previouse_performance_key4,
			other_data_key_previouse_performance_key5,
			other_data_key_previouse_race_key1,
			other_data_key_previouse_race_key2,
			other_data_key_previouse_race_key3,
			other_data_key_previouse_race_key4,
			other_data_key_previouse_race_key5,
			gate_no,
			reserve_5,
			mark_code_comprehension,
			mark_code_idm,
			mark_code_info,
			mark_code_jockey,
			mark_code_stable,
			mark_code_tourture,
			mark_code_passion,
			grass_apptitude_code,
			dart_aptitude,
			jockey_code,
			torturer_code,
			reserve_6,
			prize_info_obtain_prize,
			prize_info_profit,
			prize_info_condition_class,
			speculation_ten_index,
			speculation_pace_index,
			speculation_uptone_index,
			speculation_position_index,
			speculation_pace_speculation,
			speculation_following_middle_order,
			speculation_following_middle_difference,
			speculation_following_middle_inner_outer,
			speculation_following_3F_order,
			speculation_following_3F_difference,
			speculation_following_3F_inner_outer,
			speculation_goal_order,
			speculation_goal_difference,
			speculation_goal_inner_outer,
			speculation_pace_mark,
			distance_apptitude2,
			gate_weight,
			gate_weight_delta,
			invalid_flag,
			sex,
			owner_name,
			ownersclub_code,
			horse_mark_code,
			passion_order,
			ls_index_order,
			ten_index_ranking,
			pace_index_ranking,
			uptone_index_ranking,
			position_index_ranking,
			jockey_anticipated_winning_rate,
			jockey_anticipated_3rd_rate,
			transfer_type,
			running_type,
			figure,
			figure_impression1,
			figure_impression2,
			figure_impression3,
			horse_memo1,
			horse_memo2,
			horse_memo3,
			reference_start_index,
			reference_rate_of_delay,
			reference_previous_race,
			reference_previous_race_jockey_code,
			million_index,
			million_mark,
			demoted_flag,
			passion_type,
			suspended_reason_code,
			flag,
			apprenticeship_round_count,
			apprenticeship_date,
			apprenticeship_day_count,
			grazing,
			grazing_ranking,
			stable_rank,
			reserve_7,
			crlf,
			struct(
				case when abs(safe_cast(race_key_place_code as numeric) - avg(safe_cast(race_key_place_code as numeric))) / stddev(safe_cast(race_key_place_code as numeric)) > 3 then null else race_key_place_code end as race_key_place_code,
				case when abs(safe_cast(race_key_year as numeric) - avg(safe_cast(race_key_year as numeric))) / stddev(safe_cast(race_key_year as numeric)) > 3 then null else race_key_year end as race_key_year,
				case when abs(safe_cast(race_key_no as numeric) - avg(safe_cast(race_key_no as numeric))) / stddev(safe_cast(race_key_no as numeric)) > 3 then null else race_key_no end as race_key_no,
				case when abs(safe_cast(race_key_day as numeric) - avg(safe_cast(race_key_day as numeric))) / stddev(safe_cast(race_key_day as numeric)) > 3 then null else race_key_day end as race_key_day,
				case when abs(safe_cast(race_key_round as numeric) - avg(safe_cast(race_key_round as numeric))) / stddev(safe_cast(race_key_round as numeric)) > 3 then null else race_key_round end as race_key_round,
				case when abs(safe_cast(horse_no as numeric) - avg(safe_cast(horse_no as numeric))) / stddev(safe_cast(horse_no as numeric)) > 3 then null else horse_no end as horse_no,
				case when abs(safe_cast(register_no as numeric) - avg(safe_cast(register_no as numeric))) / stddev(safe_cast(register_no as numeric)) > 3 then null else register_no end as register_no,
				case when abs(safe_cast(horse_name as numeric) - avg(safe_cast(horse_name as numeric))) / stddev(safe_cast(horse_name as numeric)) > 3 then null else horse_name end as horse_name,
				case when abs(safe_cast(IDM as numeric) - avg(safe_cast(IDM as numeric))) / stddev(safe_cast(IDM as numeric)) > 3 then null else IDM end as IDM,
				case when abs(safe_cast(jockey_index as numeric) - avg(safe_cast(jockey_index as numeric))) / stddev(safe_cast(jockey_index as numeric)) > 3 then null else jockey_index end as jockey_index,
				case when abs(safe_cast(info_index as numeric) - avg(safe_cast(info_index as numeric))) / stddev(safe_cast(info_index as numeric)) > 3 then null else info_index end as info_index,
				case when abs(safe_cast(reserve_1 as numeric) - avg(safe_cast(reserve_1 as numeric))) / stddev(safe_cast(reserve_1 as numeric)) > 3 then null else reserve_1 end as reserve_1,
				case when abs(safe_cast(reserve_2 as numeric) - avg(safe_cast(reserve_2 as numeric))) / stddev(safe_cast(reserve_2 as numeric)) > 3 then null else reserve_2 end as reserve_2,
				case when abs(safe_cast(reserve_3 as numeric) - avg(safe_cast(reserve_3 as numeric))) / stddev(safe_cast(reserve_3 as numeric)) > 3 then null else reserve_3 end as reserve_3,
				case when abs(safe_cast(comprehension_index as numeric) - avg(safe_cast(comprehension_index as numeric))) / stddev(safe_cast(comprehension_index as numeric)) > 3 then null else comprehension_index end as comprehension_index,
				case when abs(safe_cast(leg_status as numeric) - avg(safe_cast(leg_status as numeric))) / stddev(safe_cast(leg_status as numeric)) > 3 then null else leg_status end as leg_status,
				case when abs(safe_cast(distance_apptitude as numeric) - avg(safe_cast(distance_apptitude as numeric))) / stddev(safe_cast(distance_apptitude as numeric)) > 3 then null else distance_apptitude end as distance_apptitude,
				case when abs(safe_cast(uptone_index as numeric) - avg(safe_cast(uptone_index as numeric))) / stddev(safe_cast(uptone_index as numeric)) > 3 then null else uptone_index end as uptone_index,
				case when abs(safe_cast(rotation as numeric) - avg(safe_cast(rotation as numeric))) / stddev(safe_cast(rotation as numeric)) > 3 then null else rotation end as rotation,
				case when abs(safe_cast(basis_odds as numeric) - avg(safe_cast(basis_odds as numeric))) / stddev(safe_cast(basis_odds as numeric)) > 3 then null else basis_odds end as basis_odds,
				case when abs(safe_cast(basis_reputation_order as numeric) - avg(safe_cast(basis_reputation_order as numeric))) / stddev(safe_cast(basis_reputation_order as numeric)) > 3 then null else basis_reputation_order end as basis_reputation_order,
				case when abs(safe_cast(basis_multiple_odds as numeric) - avg(safe_cast(basis_multiple_odds as numeric))) / stddev(safe_cast(basis_multiple_odds as numeric)) > 3 then null else basis_multiple_odds end as basis_multiple_odds,
				case when abs(safe_cast(basis_multiple_reputation_order as numeric) - avg(safe_cast(basis_multiple_reputation_order as numeric))) / stddev(safe_cast(basis_multiple_reputation_order as numeric)) > 3 then null else basis_multiple_reputation_order end as basis_multiple_reputation_order,
				case when abs(safe_cast(specific_info_white_double_circle as numeric) - avg(safe_cast(specific_info_white_double_circle as numeric))) / stddev(safe_cast(specific_info_white_double_circle as numeric)) > 3 then null else specific_info_white_double_circle end as specific_info_white_double_circle,
				case when abs(safe_cast(specific_info_white_circle as numeric) - avg(safe_cast(specific_info_white_circle as numeric))) / stddev(safe_cast(specific_info_white_circle as numeric)) > 3 then null else specific_info_white_circle end as specific_info_white_circle,
				case when abs(safe_cast(specific_info_black_triangle as numeric) - avg(safe_cast(specific_info_black_triangle as numeric))) / stddev(safe_cast(specific_info_black_triangle as numeric)) > 3 then null else specific_info_black_triangle end as specific_info_black_triangle,
				case when abs(safe_cast(specific_info_white_triangle as numeric) - avg(safe_cast(specific_info_white_triangle as numeric))) / stddev(safe_cast(specific_info_white_triangle as numeric)) > 3 then null else specific_info_white_triangle end as specific_info_white_triangle,
				case when abs(safe_cast(specific_info_cross as numeric) - avg(safe_cast(specific_info_cross as numeric))) / stddev(safe_cast(specific_info_cross as numeric)) > 3 then null else specific_info_cross end as specific_info_cross,
				case when abs(safe_cast(comprehension_info_double_circle as numeric) - avg(safe_cast(comprehension_info_double_circle as numeric))) / stddev(safe_cast(comprehension_info_double_circle as numeric)) > 3 then null else comprehension_info_double_circle end as comprehension_info_double_circle,
				case when abs(safe_cast(comprehension_info_circle as numeric) - avg(safe_cast(comprehension_info_circle as numeric))) / stddev(safe_cast(comprehension_info_circle as numeric)) > 3 then null else comprehension_info_circle end as comprehension_info_circle,
				case when abs(safe_cast(comprehension_info_black_triange as numeric) - avg(safe_cast(comprehension_info_black_triange as numeric))) / stddev(safe_cast(comprehension_info_black_triange as numeric)) > 3 then null else comprehension_info_black_triange end as comprehension_info_black_triange,
				case when abs(safe_cast(comprehension_info_white_triange as numeric) - avg(safe_cast(comprehension_info_white_triange as numeric))) / stddev(safe_cast(comprehension_info_white_triange as numeric)) > 3 then null else comprehension_info_white_triange end as comprehension_info_white_triange,
				case when abs(safe_cast(comprehension_info_cross as numeric) - avg(safe_cast(comprehension_info_cross as numeric))) / stddev(safe_cast(comprehension_info_cross as numeric)) > 3 then null else comprehension_info_cross end as comprehension_info_cross,
				case when abs(safe_cast(reputation_index as numeric) - avg(safe_cast(reputation_index as numeric))) / stddev(safe_cast(reputation_index as numeric)) > 3 then null else reputation_index end as reputation_index,
				case when abs(safe_cast(torture_index as numeric) - avg(safe_cast(torture_index as numeric))) / stddev(safe_cast(torture_index as numeric)) > 3 then null else torture_index end as torture_index,
				case when abs(safe_cast(stable_index as numeric) - avg(safe_cast(stable_index as numeric))) / stddev(safe_cast(stable_index as numeric)) > 3 then null else stable_index end as stable_index,
				case when abs(safe_cast(torture_arrow_code as numeric) - avg(safe_cast(torture_arrow_code as numeric))) / stddev(safe_cast(torture_arrow_code as numeric)) > 3 then null else torture_arrow_code end as torture_arrow_code,
				case when abs(safe_cast(stable_reputation_code as numeric) - avg(safe_cast(stable_reputation_code as numeric))) / stddev(safe_cast(stable_reputation_code as numeric)) > 3 then null else stable_reputation_code end as stable_reputation_code,
				case when abs(safe_cast(jockey_anticipated_serial_rate as numeric) - avg(safe_cast(jockey_anticipated_serial_rate as numeric))) / stddev(safe_cast(jockey_anticipated_serial_rate as numeric)) > 3 then null else jockey_anticipated_serial_rate end as jockey_anticipated_serial_rate,
				case when abs(safe_cast(passion_index as numeric) - avg(safe_cast(passion_index as numeric))) / stddev(safe_cast(passion_index as numeric)) > 3 then null else passion_index end as passion_index,
				case when abs(safe_cast(hoof as numeric) - avg(safe_cast(hoof as numeric))) / stddev(safe_cast(hoof as numeric)) > 3 then null else hoof end as hoof,
				case when abs(safe_cast(weight_apptitude_code as numeric) - avg(safe_cast(weight_apptitude_code as numeric))) / stddev(safe_cast(weight_apptitude_code as numeric)) > 3 then null else weight_apptitude_code end as weight_apptitude_code,
				case when abs(safe_cast(class_code as numeric) - avg(safe_cast(class_code as numeric))) / stddev(safe_cast(class_code as numeric)) > 3 then null else class_code end as class_code,
				case when abs(safe_cast(reserve_4 as numeric) - avg(safe_cast(reserve_4 as numeric))) / stddev(safe_cast(reserve_4 as numeric)) > 3 then null else reserve_4 end as reserve_4,
				case when abs(safe_cast(blinker as numeric) - avg(safe_cast(blinker as numeric))) / stddev(safe_cast(blinker as numeric)) > 3 then null else blinker end as blinker,
				case when abs(safe_cast(jockey_name as numeric) - avg(safe_cast(jockey_name as numeric))) / stddev(safe_cast(jockey_name as numeric)) > 3 then null else jockey_name end as jockey_name,
				case when abs(safe_cast(load_weight as numeric) - avg(safe_cast(load_weight as numeric))) / stddev(safe_cast(load_weight as numeric)) > 3 then null else load_weight end as load_weight,
				case when abs(safe_cast(apprentice_type as numeric) - avg(safe_cast(apprentice_type as numeric))) / stddev(safe_cast(apprentice_type as numeric)) > 3 then null else apprentice_type end as apprentice_type,
				case when abs(safe_cast(torturer_name as numeric) - avg(safe_cast(torturer_name as numeric))) / stddev(safe_cast(torturer_name as numeric)) > 3 then null else torturer_name end as torturer_name,
				case when abs(safe_cast(torturer_belonging as numeric) - avg(safe_cast(torturer_belonging as numeric))) / stddev(safe_cast(torturer_belonging as numeric)) > 3 then null else torturer_belonging end as torturer_belonging,
				case when abs(safe_cast(other_data_key_previouse_performance_key1 as numeric) - avg(safe_cast(other_data_key_previouse_performance_key1 as numeric))) / stddev(safe_cast(other_data_key_previouse_performance_key1 as numeric)) > 3 then null else other_data_key_previouse_performance_key1 end as other_data_key_previouse_performance_key1,
				case when abs(safe_cast(other_data_key_previouse_performance_key2 as numeric) - avg(safe_cast(other_data_key_previouse_performance_key2 as numeric))) / stddev(safe_cast(other_data_key_previouse_performance_key2 as numeric)) > 3 then null else other_data_key_previouse_performance_key2 end as other_data_key_previouse_performance_key2,
				case when abs(safe_cast(other_data_key_previouse_performance_key3 as numeric) - avg(safe_cast(other_data_key_previouse_performance_key3 as numeric))) / stddev(safe_cast(other_data_key_previouse_performance_key3 as numeric)) > 3 then null else other_data_key_previouse_performance_key3 end as other_data_key_previouse_performance_key3,
				case when abs(safe_cast(other_data_key_previouse_performance_key4 as numeric) - avg(safe_cast(other_data_key_previouse_performance_key4 as numeric))) / stddev(safe_cast(other_data_key_previouse_performance_key4 as numeric)) > 3 then null else other_data_key_previouse_performance_key4 end as other_data_key_previouse_performance_key4,
				case when abs(safe_cast(other_data_key_previouse_performance_key5 as numeric) - avg(safe_cast(other_data_key_previouse_performance_key5 as numeric))) / stddev(safe_cast(other_data_key_previouse_performance_key5 as numeric)) > 3 then null else other_data_key_previouse_performance_key5 end as other_data_key_previouse_performance_key5,
				case when abs(safe_cast(other_data_key_previouse_race_key1 as numeric) - avg(safe_cast(other_data_key_previouse_race_key1 as numeric))) / stddev(safe_cast(other_data_key_previouse_race_key1 as numeric)) > 3 then null else other_data_key_previouse_race_key1 end as other_data_key_previouse_race_key1,
				case when abs(safe_cast(other_data_key_previouse_race_key2 as numeric) - avg(safe_cast(other_data_key_previouse_race_key2 as numeric))) / stddev(safe_cast(other_data_key_previouse_race_key2 as numeric)) > 3 then null else other_data_key_previouse_race_key2 end as other_data_key_previouse_race_key2,
				case when abs(safe_cast(other_data_key_previouse_race_key3 as numeric) - avg(safe_cast(other_data_key_previouse_race_key3 as numeric))) / stddev(safe_cast(other_data_key_previouse_race_key3 as numeric)) > 3 then null else other_data_key_previouse_race_key3 end as other_data_key_previouse_race_key3,
				case when abs(safe_cast(other_data_key_previouse_race_key4 as numeric) - avg(safe_cast(other_data_key_previouse_race_key4 as numeric))) / stddev(safe_cast(other_data_key_previouse_race_key4 as numeric)) > 3 then null else other_data_key_previouse_race_key4 end as other_data_key_previouse_race_key4,
				case when abs(safe_cast(other_data_key_previouse_race_key5 as numeric) - avg(safe_cast(other_data_key_previouse_race_key5 as numeric))) / stddev(safe_cast(other_data_key_previouse_race_key5 as numeric)) > 3 then null else other_data_key_previouse_race_key5 end as other_data_key_previouse_race_key5,
				case when abs(safe_cast(gate_no as numeric) - avg(safe_cast(gate_no as numeric))) / stddev(safe_cast(gate_no as numeric)) > 3 then null else gate_no end as gate_no,
				case when abs(safe_cast(reserve_5 as numeric) - avg(safe_cast(reserve_5 as numeric))) / stddev(safe_cast(reserve_5 as numeric)) > 3 then null else reserve_5 end as reserve_5,
				case when abs(safe_cast(mark_code_comprehension as numeric) - avg(safe_cast(mark_code_comprehension as numeric))) / stddev(safe_cast(mark_code_comprehension as numeric)) > 3 then null else mark_code_comprehension end as mark_code_comprehension,
				case when abs(safe_cast(mark_code_idm as numeric) - avg(safe_cast(mark_code_idm as numeric))) / stddev(safe_cast(mark_code_idm as numeric)) > 3 then null else mark_code_idm end as mark_code_idm,
				case when abs(safe_cast(mark_code_info as numeric) - avg(safe_cast(mark_code_info as numeric))) / stddev(safe_cast(mark_code_info as numeric)) > 3 then null else mark_code_info end as mark_code_info,
				case when abs(safe_cast(mark_code_jockey as numeric) - avg(safe_cast(mark_code_jockey as numeric))) / stddev(safe_cast(mark_code_jockey as numeric)) > 3 then null else mark_code_jockey end as mark_code_jockey,
				case when abs(safe_cast(mark_code_stable as numeric) - avg(safe_cast(mark_code_stable as numeric))) / stddev(safe_cast(mark_code_stable as numeric)) > 3 then null else mark_code_stable end as mark_code_stable,
				case when abs(safe_cast(mark_code_tourture as numeric) - avg(safe_cast(mark_code_tourture as numeric))) / stddev(safe_cast(mark_code_tourture as numeric)) > 3 then null else mark_code_tourture end as mark_code_tourture,
				case when abs(safe_cast(mark_code_passion as numeric) - avg(safe_cast(mark_code_passion as numeric))) / stddev(safe_cast(mark_code_passion as numeric)) > 3 then null else mark_code_passion end as mark_code_passion,
				case when abs(safe_cast(grass_apptitude_code as numeric) - avg(safe_cast(grass_apptitude_code as numeric))) / stddev(safe_cast(grass_apptitude_code as numeric)) > 3 then null else grass_apptitude_code end as grass_apptitude_code,
				case when abs(safe_cast(dart_aptitude as numeric) - avg(safe_cast(dart_aptitude as numeric))) / stddev(safe_cast(dart_aptitude as numeric)) > 3 then null else dart_aptitude end as dart_aptitude,
				case when abs(safe_cast(jockey_code as numeric) - avg(safe_cast(jockey_code as numeric))) / stddev(safe_cast(jockey_code as numeric)) > 3 then null else jockey_code end as jockey_code,
				case when abs(safe_cast(torturer_code as numeric) - avg(safe_cast(torturer_code as numeric))) / stddev(safe_cast(torturer_code as numeric)) > 3 then null else torturer_code end as torturer_code,
				case when abs(safe_cast(reserve_6 as numeric) - avg(safe_cast(reserve_6 as numeric))) / stddev(safe_cast(reserve_6 as numeric)) > 3 then null else reserve_6 end as reserve_6,
				case when abs(safe_cast(prize_info_obtain_prize as numeric) - avg(safe_cast(prize_info_obtain_prize as numeric))) / stddev(safe_cast(prize_info_obtain_prize as numeric)) > 3 then null else prize_info_obtain_prize end as prize_info_obtain_prize,
				case when abs(safe_cast(prize_info_profit as numeric) - avg(safe_cast(prize_info_profit as numeric))) / stddev(safe_cast(prize_info_profit as numeric)) > 3 then null else prize_info_profit end as prize_info_profit,
				case when abs(safe_cast(prize_info_condition_class as numeric) - avg(safe_cast(prize_info_condition_class as numeric))) / stddev(safe_cast(prize_info_condition_class as numeric)) > 3 then null else prize_info_condition_class end as prize_info_condition_class,
				case when abs(safe_cast(speculation_ten_index as numeric) - avg(safe_cast(speculation_ten_index as numeric))) / stddev(safe_cast(speculation_ten_index as numeric)) > 3 then null else speculation_ten_index end as speculation_ten_index,
				case when abs(safe_cast(speculation_pace_index as numeric) - avg(safe_cast(speculation_pace_index as numeric))) / stddev(safe_cast(speculation_pace_index as numeric)) > 3 then null else speculation_pace_index end as speculation_pace_index,
				case when abs(safe_cast(speculation_uptone_index as numeric) - avg(safe_cast(speculation_uptone_index as numeric))) / stddev(safe_cast(speculation_uptone_index as numeric)) > 3 then null else speculation_uptone_index end as speculation_uptone_index,
				case when abs(safe_cast(speculation_position_index as numeric) - avg(safe_cast(speculation_position_index as numeric))) / stddev(safe_cast(speculation_position_index as numeric)) > 3 then null else speculation_position_index end as speculation_position_index,
				case when abs(safe_cast(speculation_pace_speculation as numeric) - avg(safe_cast(speculation_pace_speculation as numeric))) / stddev(safe_cast(speculation_pace_speculation as numeric)) > 3 then null else speculation_pace_speculation end as speculation_pace_speculation,
				case when abs(safe_cast(speculation_following_middle_order as numeric) - avg(safe_cast(speculation_following_middle_order as numeric))) / stddev(safe_cast(speculation_following_middle_order as numeric)) > 3 then null else speculation_following_middle_order end as speculation_following_middle_order,
				case when abs(safe_cast(speculation_following_middle_difference as numeric) - avg(safe_cast(speculation_following_middle_difference as numeric))) / stddev(safe_cast(speculation_following_middle_difference as numeric)) > 3 then null else speculation_following_middle_difference end as speculation_following_middle_difference,
				case when abs(safe_cast(speculation_following_middle_inner_outer as numeric) - avg(safe_cast(speculation_following_middle_inner_outer as numeric))) / stddev(safe_cast(speculation_following_middle_inner_outer as numeric)) > 3 then null else speculation_following_middle_inner_outer end as speculation_following_middle_inner_outer,
				case when abs(safe_cast(speculation_following_3F_order as numeric) - avg(safe_cast(speculation_following_3F_order as numeric))) / stddev(safe_cast(speculation_following_3F_order as numeric)) > 3 then null else speculation_following_3F_order end as speculation_following_3F_order,
				case when abs(safe_cast(speculation_following_3F_difference as numeric) - avg(safe_cast(speculation_following_3F_difference as numeric))) / stddev(safe_cast(speculation_following_3F_difference as numeric)) > 3 then null else speculation_following_3F_difference end as speculation_following_3F_difference,
				case when abs(safe_cast(speculation_following_3F_inner_outer as numeric) - avg(safe_cast(speculation_following_3F_inner_outer as numeric))) / stddev(safe_cast(speculation_following_3F_inner_outer as numeric)) > 3 then null else speculation_following_3F_inner_outer end as speculation_following_3F_inner_outer,
				case when abs(safe_cast(speculation_goal_order as numeric) - avg(safe_cast(speculation_goal_order as numeric))) / stddev(safe_cast(speculation_goal_order as numeric)) > 3 then null else speculation_goal_order end as speculation_goal_order,
				case when abs(safe_cast(speculation_goal_difference as numeric) - avg(safe_cast(speculation_goal_difference as numeric))) / stddev(safe_cast(speculation_goal_difference as numeric)) > 3 then null else speculation_goal_difference end as speculation_goal_difference,
				case when abs(safe_cast(speculation_goal_inner_outer as numeric) - avg(safe_cast(speculation_goal_inner_outer as numeric))) / stddev(safe_cast(speculation_goal_inner_outer as numeric)) > 3 then null else speculation_goal_inner_outer end as speculation_goal_inner_outer,
				case when abs(safe_cast(speculation_pace_mark as numeric) - avg(safe_cast(speculation_pace_mark as numeric))) / stddev(safe_cast(speculation_pace_mark as numeric)) > 3 then null else speculation_pace_mark end as speculation_pace_mark,
				case when abs(safe_cast(distance_apptitude2 as numeric) - avg(safe_cast(distance_apptitude2 as numeric))) / stddev(safe_cast(distance_apptitude2 as numeric)) > 3 then null else distance_apptitude2 end as distance_apptitude2,
				case when abs(safe_cast(gate_weight as numeric) - avg(safe_cast(gate_weight as numeric))) / stddev(safe_cast(gate_weight as numeric)) > 3 then null else gate_weight end as gate_weight,
				case when abs(safe_cast(gate_weight_delta as numeric) - avg(safe_cast(gate_weight_delta as numeric))) / stddev(safe_cast(gate_weight_delta as numeric)) > 3 then null else gate_weight_delta end as gate_weight_delta,
				case when abs(safe_cast(invalid_flag as numeric) - avg(safe_cast(invalid_flag as numeric))) / stddev(safe_cast(invalid_flag as numeric)) > 3 then null else invalid_flag end as invalid_flag,
				case when abs(safe_cast(sex as numeric) - avg(safe_cast(sex as numeric))) / stddev(safe_cast(sex as numeric)) > 3 then null else sex end as sex,
				case when abs(safe_cast(owner_name as numeric) - avg(safe_cast(owner_name as numeric))) / stddev(safe_cast(owner_name as numeric)) > 3 then null else owner_name end as owner_name,
				case when abs(safe_cast(ownersclub_code as numeric) - avg(safe_cast(ownersclub_code as numeric))) / stddev(safe_cast(ownersclub_code as numeric)) > 3 then null else ownersclub_code end as ownersclub_code,
				case when abs(safe_cast(horse_mark_code as numeric) - avg(safe_cast(horse_mark_code as numeric))) / stddev(safe_cast(horse_mark_code as numeric)) > 3 then null else horse_mark_code end as horse_mark_code,
				case when abs(safe_cast(passion_order as numeric) - avg(safe_cast(passion_order as numeric))) / stddev(safe_cast(passion_order as numeric)) > 3 then null else passion_order end as passion_order,
				case when abs(safe_cast(ls_index_order as numeric) - avg(safe_cast(ls_index_order as numeric))) / stddev(safe_cast(ls_index_order as numeric)) > 3 then null else ls_index_order end as ls_index_order,
				case when abs(safe_cast(ten_index_ranking as numeric) - avg(safe_cast(ten_index_ranking as numeric))) / stddev(safe_cast(ten_index_ranking as numeric)) > 3 then null else ten_index_ranking end as ten_index_ranking,
				case when abs(safe_cast(pace_index_ranking as numeric) - avg(safe_cast(pace_index_ranking as numeric))) / stddev(safe_cast(pace_index_ranking as numeric)) > 3 then null else pace_index_ranking end as pace_index_ranking,
				case when abs(safe_cast(uptone_index_ranking as numeric) - avg(safe_cast(uptone_index_ranking as numeric))) / stddev(safe_cast(uptone_index_ranking as numeric)) > 3 then null else uptone_index_ranking end as uptone_index_ranking,
				case when abs(safe_cast(position_index_ranking as numeric) - avg(safe_cast(position_index_ranking as numeric))) / stddev(safe_cast(position_index_ranking as numeric)) > 3 then null else position_index_ranking end as position_index_ranking,
				case when abs(safe_cast(jockey_anticipated_winning_rate as numeric) - avg(safe_cast(jockey_anticipated_winning_rate as numeric))) / stddev(safe_cast(jockey_anticipated_winning_rate as numeric)) > 3 then null else jockey_anticipated_winning_rate end as jockey_anticipated_winning_rate,
				case when abs(safe_cast(jockey_anticipated_3rd_rate as numeric) - avg(safe_cast(jockey_anticipated_3rd_rate as numeric))) / stddev(safe_cast(jockey_anticipated_3rd_rate as numeric)) > 3 then null else jockey_anticipated_3rd_rate end as jockey_anticipated_3rd_rate,
				case when abs(safe_cast(transfer_type as numeric) - avg(safe_cast(transfer_type as numeric))) / stddev(safe_cast(transfer_type as numeric)) > 3 then null else transfer_type end as transfer_type,
				case when abs(safe_cast(running_type as numeric) - avg(safe_cast(running_type as numeric))) / stddev(safe_cast(running_type as numeric)) > 3 then null else running_type end as running_type,
				case when abs(safe_cast(figure as numeric) - avg(safe_cast(figure as numeric))) / stddev(safe_cast(figure as numeric)) > 3 then null else figure end as figure,
				case when abs(safe_cast(figure_impression1 as numeric) - avg(safe_cast(figure_impression1 as numeric))) / stddev(safe_cast(figure_impression1 as numeric)) > 3 then null else figure_impression1 end as figure_impression1,
				case when abs(safe_cast(figure_impression2 as numeric) - avg(safe_cast(figure_impression2 as numeric))) / stddev(safe_cast(figure_impression2 as numeric)) > 3 then null else figure_impression2 end as figure_impression2,
				case when abs(safe_cast(figure_impression3 as numeric) - avg(safe_cast(figure_impression3 as numeric))) / stddev(safe_cast(figure_impression3 as numeric)) > 3 then null else figure_impression3 end as figure_impression3,
				case when abs(safe_cast(horse_memo1 as numeric) - avg(safe_cast(horse_memo1 as numeric))) / stddev(safe_cast(horse_memo1 as numeric)) > 3 then null else horse_memo1 end as horse_memo1,
				case when abs(safe_cast(horse_memo2 as numeric) - avg(safe_cast(horse_memo2 as numeric))) / stddev(safe_cast(horse_memo2 as numeric)) > 3 then null else horse_memo2 end as horse_memo2,
				case when abs(safe_cast(horse_memo3 as numeric) - avg(safe_cast(horse_memo3 as numeric))) / stddev(safe_cast(horse_memo3 as numeric)) > 3 then null else horse_memo3 end as horse_memo3,
				case when abs(safe_cast(reference_start_index as numeric) - avg(safe_cast(reference_start_index as numeric))) / stddev(safe_cast(reference_start_index as numeric)) > 3 then null else reference_start_index end as reference_start_index,
				case when abs(safe_cast(reference_rate_of_delay as numeric) - avg(safe_cast(reference_rate_of_delay as numeric))) / stddev(safe_cast(reference_rate_of_delay as numeric)) > 3 then null else reference_rate_of_delay end as reference_rate_of_delay,
				case when abs(safe_cast(reference_previous_race as numeric) - avg(safe_cast(reference_previous_race as numeric))) / stddev(safe_cast(reference_previous_race as numeric)) > 3 then null else reference_previous_race end as reference_previous_race,
				case when abs(safe_cast(reference_previous_race_jockey_code as numeric) - avg(safe_cast(reference_previous_race_jockey_code as numeric))) / stddev(safe_cast(reference_previous_race_jockey_code as numeric)) > 3 then null else reference_previous_race_jockey_code end as reference_previous_race_jockey_code,
				case when abs(safe_cast(million_index as numeric) - avg(safe_cast(million_index as numeric))) / stddev(safe_cast(million_index as numeric)) > 3 then null else million_index end as million_index,
				case when abs(safe_cast(million_mark as numeric) - avg(safe_cast(million_mark as numeric))) / stddev(safe_cast(million_mark as numeric)) > 3 then null else million_mark end as million_mark,
				case when abs(safe_cast(demoted_flag as numeric) - avg(safe_cast(demoted_flag as numeric))) / stddev(safe_cast(demoted_flag as numeric)) > 3 then null else demoted_flag end as demoted_flag,
				case when abs(safe_cast(passion_type as numeric) - avg(safe_cast(passion_type as numeric))) / stddev(safe_cast(passion_type as numeric)) > 3 then null else passion_type end as passion_type,
				case when abs(safe_cast(suspended_reason_code as numeric) - avg(safe_cast(suspended_reason_code as numeric))) / stddev(safe_cast(suspended_reason_code as numeric)) > 3 then null else suspended_reason_code end as suspended_reason_code,
				case when abs(safe_cast(flag as numeric) - avg(safe_cast(flag as numeric))) / stddev(safe_cast(flag as numeric)) > 3 then null else flag end as flag,
				case when abs(safe_cast(apprenticeship_round_count as numeric) - avg(safe_cast(apprenticeship_round_count as numeric))) / stddev(safe_cast(apprenticeship_round_count as numeric)) > 3 then null else apprenticeship_round_count end as apprenticeship_round_count,
				case when abs(safe_cast(apprenticeship_date as numeric) - avg(safe_cast(apprenticeship_date as numeric))) / stddev(safe_cast(apprenticeship_date as numeric)) > 3 then null else apprenticeship_date end as apprenticeship_date,
				case when abs(safe_cast(apprenticeship_day_count as numeric) - avg(safe_cast(apprenticeship_day_count as numeric))) / stddev(safe_cast(apprenticeship_day_count as numeric)) > 3 then null else apprenticeship_day_count end as apprenticeship_day_count,
				case when abs(safe_cast(grazing as numeric) - avg(safe_cast(grazing as numeric))) / stddev(safe_cast(grazing as numeric)) > 3 then null else grazing end as grazing,
				case when abs(safe_cast(grazing_ranking as numeric) - avg(safe_cast(grazing_ranking as numeric))) / stddev(safe_cast(grazing_ranking as numeric)) > 3 then null else grazing_ranking end as grazing_ranking,
				case when abs(safe_cast(stable_rank as numeric) - avg(safe_cast(stable_rank as numeric))) / stddev(safe_cast(stable_rank as numeric)) > 3 then null else stable_rank end as stable_rank,
				case when abs(safe_cast(reserve_7 as numeric) - avg(safe_cast(reserve_7 as numeric))) / stddev(safe_cast(reserve_7 as numeric)) > 3 then null else reserve_7 end as reserve_7,
				case when abs(safe_cast(crlf as numeric) - avg(safe_cast(crlf as numeric))) / stddev(safe_cast(crlf as numeric)) > 3 then null else crlf end as crlf
			) as without_error
		from
			`yu-it-base.jrdb_raw_data.a_kyi` as kyi
	) as tbl