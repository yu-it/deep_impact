select
concat(format_datetime("%F",bac.date),"_",kyi.race_key_place_code,kyi.race_key_round) as primary_key,
kyi.race_key_place_code,
kyi.race_key_year,
kyi.race_key_no,
kyi.race_key_day,
kyi.race_key_round,
max(cat_weather_code.meaning) as weather_name,
max(cat_grass_field_status_code.meaning) as grass_field_status_name,
max(cat_dart_field_status_code.meaning) as dart_field_status_name,
max(cat_grass_type.meaning) as grass_type_name,
max(cat_race_condition_type.meaning) as race_condition_type_name,
max(cat_race_condition_condition.meaning) as race_condition_condition_name,
max(cat_race_condition_mark.meaning) as race_condition_mark_name,
max(cat_race_condition_grade.meaning) as race_condition_grade_name,
max(cat_place.meaning) as place_name,
max(kab.weather_code) as weather_code,
max(kab.grass_field_status_code) as grass_field_status_code,
max(kab.dart_field_status_code) as dart_field_status_code,
max(bac.date) as date,
max(bac.time_to_start) as time_to_start,
max(bac.race_condition_distance) as race_condition_distance,
max(bac.race_condition_track_grass_dart_etc) as race_condition_track_grass_dart_etc,
max(bac.race_condition_track_right_left) as race_condition_track_right_left,
max(bac.race_condition_track_inner_outer) as race_condition_track_inner_outer,
max(bac.race_condition_type) as race_condition_type,
max(bac.race_condition_condition) as race_condition_condition,
max(bac.race_condition_mark) as race_condition_mark,
max(bac.race_condition_weight) as race_condition_weight,
max(bac.race_condition_grade) as race_condition_grade,
max(bac.race_name) as race_name,
max(bac.count1) as count1,
max(bac.horse_count) as horse_count,
max(bac.course) as course,
max(bac.held_class) as held_class,
max(bac.race_short_name) as race_short_name,
max(bac.race_name_9) as race_name_9,
max(bac.data_category) as data_category,
max(bac.prize_1st) as prize_1st,
max(bac.prize_2nd) as prize_2nd,
max(bac.prize_3rd) as prize_3rd,
max(bac.prize_4th) as prize_4th,
max(bac.prize_5th) as prize_5th,
max(bac.summary_prize_1st) as summary_prize_1st,
max(bac.summary_prize_2nd) as summary_prize_2nd,
max(bac.sold_flag) as sold_flag,
max(bac.win5flag) as win5flag,
max(kab.day_of_week) as day_of_week,
max(kab.grass_field_status_inner) as grass_field_status_inner,
max(kab.grass_field_status_middle) as grass_field_status_middle,
max(kab.grass_field_status_outer) as grass_field_status_outer,
max(kab.grass_field_fidderence) as grass_field_fidderence,
max(kab.linear_field_difference_great_inner) as linear_field_difference_great_inner,
max(kab.linear_field_difference_inner) as linear_field_difference_inner,
max(kab.linear_field_difference_middle) as linear_field_difference_middle,
max(kab.linear_field_difference_outer) as linear_field_difference_outer,
max(kab.linear_field_difference_great_outer) as linear_field_difference_great_outer,
max(kab.dart_field_status_inner) as dart_field_status_inner,
max(kab.dart_field_status_middle) as dart_field_status_middle,
max(kab.dart_field_status_outer) as dart_field_status_outer,
max(kab.dart_field_difference) as dart_field_difference,
max(kab.consecutive_victory_count) as consecutive_victory_count,
max(kab.grass_type) as grass_type,
max(kab.grass_length) as grass_length,
max(kab.pressure_transfer) as pressure_transfer,
max(kab.freezing_avoidance) as freezing_avoidance,
max(kab.rain) as rain,
max(case when sed.horse_no = kyi.horse_no then kyi.horse_name else null end) as horse_name_no1_horse,
max(case when sed.horse_no = kyi.horse_no then kyi.register_no else null end) as register_no_no1_horse,
max(case when sed.horse_no = kyi.horse_no then kyi.horse_no else null end) as horse_no_no1_horse,
max(sed.refunds_single) as refunds_single,
max(IDM) as IDM_max,
min(IDM) as IDM_min,
avg(IDM) as IDM_avg,
stddev(IDM) as IDM_stddev,
max(jockey_index) as jockey_index_max,
min(jockey_index) as jockey_index_min,
avg(jockey_index) as jockey_index_avg,
stddev(jockey_index) as jockey_index_stddev,
max(info_index) as info_index_max,
min(info_index) as info_index_min,
avg(info_index) as info_index_avg,
stddev(info_index) as info_index_stddev,
max(comprehension_index) as comprehension_index_max,
min(comprehension_index) as comprehension_index_min,
avg(comprehension_index) as comprehension_index_avg,
stddev(comprehension_index) as comprehension_index_stddev,
max(rotation) as rotation_max,
min(rotation) as rotation_min,
avg(rotation) as rotation_avg,
stddev(rotation) as rotation_stddev,
max(basis_odds) as basis_odds_max,
min(basis_odds) as basis_odds_min,
avg(basis_odds) as basis_odds_avg,
stddev(basis_odds) as basis_odds_stddev,
max(basis_reputation_order) as basis_reputation_order_max,
min(basis_reputation_order) as basis_reputation_order_min,
avg(basis_reputation_order) as basis_reputation_order_avg,
stddev(basis_reputation_order) as basis_reputation_order_stddev,
max(basis_multiple_odds) as basis_multiple_odds_max,
min(basis_multiple_odds) as basis_multiple_odds_min,
avg(basis_multiple_odds) as basis_multiple_odds_avg,
stddev(basis_multiple_odds) as basis_multiple_odds_stddev,
max(basis_multiple_reputation_order) as basis_multiple_reputation_order_max,
min(basis_multiple_reputation_order) as basis_multiple_reputation_order_min,
avg(basis_multiple_reputation_order) as basis_multiple_reputation_order_avg,
stddev(basis_multiple_reputation_order) as basis_multiple_reputation_order_stddev,
max(specific_info_white_double_circle) as specific_info_white_double_circle_max,
min(specific_info_white_double_circle) as specific_info_white_double_circle_min,
avg(specific_info_white_double_circle) as specific_info_white_double_circle_avg,
stddev(specific_info_white_double_circle) as specific_info_white_double_circle_stddev,
max(specific_info_white_circle) as specific_info_white_circle_max,
min(specific_info_white_circle) as specific_info_white_circle_min,
avg(specific_info_white_circle) as specific_info_white_circle_avg,
stddev(specific_info_white_circle) as specific_info_white_circle_stddev,
max(specific_info_black_triangle) as specific_info_black_triangle_max,
min(specific_info_black_triangle) as specific_info_black_triangle_min,
avg(specific_info_black_triangle) as specific_info_black_triangle_avg,
stddev(specific_info_black_triangle) as specific_info_black_triangle_stddev,
max(specific_info_white_triangle) as specific_info_white_triangle_max,
min(specific_info_white_triangle) as specific_info_white_triangle_min,
avg(specific_info_white_triangle) as specific_info_white_triangle_avg,
stddev(specific_info_white_triangle) as specific_info_white_triangle_stddev,
max(specific_info_cross) as specific_info_cross_max,
min(specific_info_cross) as specific_info_cross_min,
avg(specific_info_cross) as specific_info_cross_avg,
stddev(specific_info_cross) as specific_info_cross_stddev,
max(comprehension_info_double_circle) as comprehension_info_double_circle_max,
min(comprehension_info_double_circle) as comprehension_info_double_circle_min,
avg(comprehension_info_double_circle) as comprehension_info_double_circle_avg,
stddev(comprehension_info_double_circle) as comprehension_info_double_circle_stddev,
max(comprehension_info_circle) as comprehension_info_circle_max,
min(comprehension_info_circle) as comprehension_info_circle_min,
avg(comprehension_info_circle) as comprehension_info_circle_avg,
stddev(comprehension_info_circle) as comprehension_info_circle_stddev,
max(comprehension_info_black_triange) as comprehension_info_black_triange_max,
min(comprehension_info_black_triange) as comprehension_info_black_triange_min,
avg(comprehension_info_black_triange) as comprehension_info_black_triange_avg,
stddev(comprehension_info_black_triange) as comprehension_info_black_triange_stddev,
max(comprehension_info_white_triange) as comprehension_info_white_triange_max,
min(comprehension_info_white_triange) as comprehension_info_white_triange_min,
avg(comprehension_info_white_triange) as comprehension_info_white_triange_avg,
stddev(comprehension_info_white_triange) as comprehension_info_white_triange_stddev,
max(comprehension_info_cross) as comprehension_info_cross_max,
min(comprehension_info_cross) as comprehension_info_cross_min,
avg(comprehension_info_cross) as comprehension_info_cross_avg,
stddev(comprehension_info_cross) as comprehension_info_cross_stddev,
max(reputation_index) as reputation_index_max,
min(reputation_index) as reputation_index_min,
avg(reputation_index) as reputation_index_avg,
stddev(reputation_index) as reputation_index_stddev,
max(torture_index) as torture_index_max,
min(torture_index) as torture_index_min,
avg(torture_index) as torture_index_avg,
stddev(torture_index) as torture_index_stddev,
max(stable_index) as stable_index_max,
min(stable_index) as stable_index_min,
avg(stable_index) as stable_index_avg,
stddev(stable_index) as stable_index_stddev,
max(jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate_max,
min(jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate_min,
avg(jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate_avg,
stddev(jockey_anticipated_serial_rate) as jockey_anticipated_serial_rate_stddev,
max(passion_index) as passion_index_max,
min(passion_index) as passion_index_min,
avg(passion_index) as passion_index_avg,
stddev(passion_index) as passion_index_stddev,
max(load_weight) as load_weight_max,
min(load_weight) as load_weight_min,
avg(load_weight) as load_weight_avg,
stddev(load_weight) as load_weight_stddev,
max(prize_info_obtain_prize) as prize_info_obtain_prize_max,
min(prize_info_obtain_prize) as prize_info_obtain_prize_min,
avg(prize_info_obtain_prize) as prize_info_obtain_prize_avg,
stddev(prize_info_obtain_prize) as prize_info_obtain_prize_stddev,
max(prize_info_profit) as prize_info_profit_max,
min(prize_info_profit) as prize_info_profit_min,
avg(prize_info_profit) as prize_info_profit_avg,
stddev(prize_info_profit) as prize_info_profit_stddev,
max(speculation_ten_index) as speculation_ten_index_max,
min(speculation_ten_index) as speculation_ten_index_min,
avg(speculation_ten_index) as speculation_ten_index_avg,
stddev(speculation_ten_index) as speculation_ten_index_stddev,
max(speculation_pace_index) as speculation_pace_index_max,
min(speculation_pace_index) as speculation_pace_index_min,
avg(speculation_pace_index) as speculation_pace_index_avg,
stddev(speculation_pace_index) as speculation_pace_index_stddev,
max(speculation_uptone_index) as speculation_uptone_index_max,
min(speculation_uptone_index) as speculation_uptone_index_min,
avg(speculation_uptone_index) as speculation_uptone_index_avg,
stddev(speculation_uptone_index) as speculation_uptone_index_stddev,
max(speculation_position_index) as speculation_position_index_max,
min(speculation_position_index) as speculation_position_index_min,
avg(speculation_position_index) as speculation_position_index_avg,
stddev(speculation_position_index) as speculation_position_index_stddev,
max(speculation_following_middle_order) as speculation_following_middle_order_max,
min(speculation_following_middle_order) as speculation_following_middle_order_min,
avg(speculation_following_middle_order) as speculation_following_middle_order_avg,
stddev(speculation_following_middle_order) as speculation_following_middle_order_stddev,
max(speculation_following_middle_difference) as speculation_following_middle_difference_max,
min(speculation_following_middle_difference) as speculation_following_middle_difference_min,
avg(speculation_following_middle_difference) as speculation_following_middle_difference_avg,
stddev(speculation_following_middle_difference) as speculation_following_middle_difference_stddev,
max(speculation_following_3F_order) as speculation_following_3F_order_max,
min(speculation_following_3F_order) as speculation_following_3F_order_min,
avg(speculation_following_3F_order) as speculation_following_3F_order_avg,
stddev(speculation_following_3F_order) as speculation_following_3F_order_stddev,
max(speculation_following_3F_difference) as speculation_following_3F_difference_max,
min(speculation_following_3F_difference) as speculation_following_3F_difference_min,
avg(speculation_following_3F_difference) as speculation_following_3F_difference_avg,
stddev(speculation_following_3F_difference) as speculation_following_3F_difference_stddev,
max(speculation_goal_order) as speculation_goal_order_max,
min(speculation_goal_order) as speculation_goal_order_min,
avg(speculation_goal_order) as speculation_goal_order_avg,
stddev(speculation_goal_order) as speculation_goal_order_stddev,
max(speculation_goal_difference) as speculation_goal_difference_max,
min(speculation_goal_difference) as speculation_goal_difference_min,
avg(speculation_goal_difference) as speculation_goal_difference_avg,
stddev(speculation_goal_difference) as speculation_goal_difference_stddev,
max(passion_order) as passion_order_max,
min(passion_order) as passion_order_min,
avg(passion_order) as passion_order_avg,
stddev(passion_order) as passion_order_stddev,
max(ls_index_order) as ls_index_order_max,
min(ls_index_order) as ls_index_order_min,
avg(ls_index_order) as ls_index_order_avg,
stddev(ls_index_order) as ls_index_order_stddev,
max(ten_index_ranking) as ten_index_ranking_max,
min(ten_index_ranking) as ten_index_ranking_min,
avg(ten_index_ranking) as ten_index_ranking_avg,
stddev(ten_index_ranking) as ten_index_ranking_stddev,
max(pace_index_ranking) as pace_index_ranking_max,
min(pace_index_ranking) as pace_index_ranking_min,
avg(pace_index_ranking) as pace_index_ranking_avg,
stddev(pace_index_ranking) as pace_index_ranking_stddev,
max(uptone_index_ranking) as uptone_index_ranking_max,
min(uptone_index_ranking) as uptone_index_ranking_min,
avg(uptone_index_ranking) as uptone_index_ranking_avg,
stddev(uptone_index_ranking) as uptone_index_ranking_stddev,
max(position_index_ranking) as position_index_ranking_max,
min(position_index_ranking) as position_index_ranking_min,
avg(position_index_ranking) as position_index_ranking_avg,
stddev(position_index_ranking) as position_index_ranking_stddev,
max(jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate_max,
min(jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate_min,
avg(jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate_avg,
stddev(jockey_anticipated_winning_rate) as jockey_anticipated_winning_rate_stddev,
max(jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate_max,
min(jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate_min,
avg(jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate_avg,
stddev(jockey_anticipated_3rd_rate) as jockey_anticipated_3rd_rate_stddev,
max(reference_start_index) as reference_start_index_max,
min(reference_start_index) as reference_start_index_min,
avg(reference_start_index) as reference_start_index_avg,
stddev(reference_start_index) as reference_start_index_stddev,
max(reference_rate_of_delay) as reference_rate_of_delay_max,
min(reference_rate_of_delay) as reference_rate_of_delay_min,
avg(reference_rate_of_delay) as reference_rate_of_delay_avg,
stddev(reference_rate_of_delay) as reference_rate_of_delay_stddev,
max(million_index) as million_index_max,
min(million_index) as million_index_min,
avg(million_index) as million_index_avg,
stddev(million_index) as million_index_stddev,
max(apprenticeship_round_count) as apprenticeship_round_count_max,
min(apprenticeship_round_count) as apprenticeship_round_count_min,
avg(apprenticeship_round_count) as apprenticeship_round_count_avg,
stddev(apprenticeship_round_count) as apprenticeship_round_count_stddev,
max(apprenticeship_day_count) as apprenticeship_day_count_max,
min(apprenticeship_day_count) as apprenticeship_day_count_min,
avg(apprenticeship_day_count) as apprenticeship_day_count_avg,
stddev(apprenticeship_day_count) as apprenticeship_day_count_stddev,
max(case when sed.horse_no = kyi.horse_no then IDM else null end) as IDM_no1_horse,
max(case when sed.horse_no = kyi.horse_no then jockey_index else null end) as jockey_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then info_index else null end) as info_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then comprehension_index else null end) as comprehension_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then rotation else null end) as rotation_no1_horse,
max(case when sed.horse_no = kyi.horse_no then basis_odds else null end) as basis_odds_no1_horse,
max(case when sed.horse_no = kyi.horse_no then basis_reputation_order else null end) as basis_reputation_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then basis_multiple_odds else null end) as basis_multiple_odds_no1_horse,
max(case when sed.horse_no = kyi.horse_no then basis_multiple_reputation_order else null end) as basis_multiple_reputation_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then specific_info_white_double_circle else null end) as specific_info_white_double_circle_no1_horse,
max(case when sed.horse_no = kyi.horse_no then specific_info_white_circle else null end) as specific_info_white_circle_no1_horse,
max(case when sed.horse_no = kyi.horse_no then specific_info_black_triangle else null end) as specific_info_black_triangle_no1_horse,
max(case when sed.horse_no = kyi.horse_no then specific_info_white_triangle else null end) as specific_info_white_triangle_no1_horse,
max(case when sed.horse_no = kyi.horse_no then specific_info_cross else null end) as specific_info_cross_no1_horse,
max(case when sed.horse_no = kyi.horse_no then comprehension_info_double_circle else null end) as comprehension_info_double_circle_no1_horse,
max(case when sed.horse_no = kyi.horse_no then comprehension_info_circle else null end) as comprehension_info_circle_no1_horse,
max(case when sed.horse_no = kyi.horse_no then comprehension_info_black_triange else null end) as comprehension_info_black_triange_no1_horse,
max(case when sed.horse_no = kyi.horse_no then comprehension_info_white_triange else null end) as comprehension_info_white_triange_no1_horse,
max(case when sed.horse_no = kyi.horse_no then comprehension_info_cross else null end) as comprehension_info_cross_no1_horse,
max(case when sed.horse_no = kyi.horse_no then reputation_index else null end) as reputation_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then torture_index else null end) as torture_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then stable_index else null end) as stable_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then jockey_anticipated_serial_rate else null end) as jockey_anticipated_serial_rate_no1_horse,
max(case when sed.horse_no = kyi.horse_no then passion_index else null end) as passion_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then load_weight else null end) as load_weight_no1_horse,
max(case when sed.horse_no = kyi.horse_no then prize_info_obtain_prize else null end) as prize_info_obtain_prize_no1_horse,
max(case when sed.horse_no = kyi.horse_no then prize_info_profit else null end) as prize_info_profit_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_ten_index else null end) as speculation_ten_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_pace_index else null end) as speculation_pace_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_uptone_index else null end) as speculation_uptone_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_position_index else null end) as speculation_position_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_following_middle_order else null end) as speculation_following_middle_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_following_middle_difference else null end) as speculation_following_middle_difference_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_following_3F_order else null end) as speculation_following_3F_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_following_3F_difference else null end) as speculation_following_3F_difference_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_goal_order else null end) as speculation_goal_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then speculation_goal_difference else null end) as speculation_goal_difference_no1_horse,
max(case when sed.horse_no = kyi.horse_no then passion_order else null end) as passion_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then ls_index_order else null end) as ls_index_order_no1_horse,
max(case when sed.horse_no = kyi.horse_no then ten_index_ranking else null end) as ten_index_ranking_no1_horse,
max(case when sed.horse_no = kyi.horse_no then pace_index_ranking else null end) as pace_index_ranking_no1_horse,
max(case when sed.horse_no = kyi.horse_no then uptone_index_ranking else null end) as uptone_index_ranking_no1_horse,
max(case when sed.horse_no = kyi.horse_no then position_index_ranking else null end) as position_index_ranking_no1_horse,
max(case when sed.horse_no = kyi.horse_no then jockey_anticipated_winning_rate else null end) as jockey_anticipated_winning_rate_no1_horse,
max(case when sed.horse_no = kyi.horse_no then jockey_anticipated_3rd_rate else null end) as jockey_anticipated_3rd_rate_no1_horse,
max(case when sed.horse_no = kyi.horse_no then reference_start_index else null end) as reference_start_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then reference_rate_of_delay else null end) as reference_rate_of_delay_no1_horse,
max(case when sed.horse_no = kyi.horse_no then million_index else null end) as million_index_no1_horse,
max(case when sed.horse_no = kyi.horse_no then apprenticeship_round_count else null end) as apprenticeship_round_count_no1_horse,
max(case when sed.horse_no = kyi.horse_no then apprenticeship_day_count else null end) as apprenticeship_day_count_no1_horse,
case when max(IDM) = max(case when sed.horse_no = kyi.horse_no then IDM else null end) then 1 else 0 end as IDM_correct_flag,
case when max(IDM) = max(case when sed.horse_no = kyi.horse_no then IDM else null end) then max(refunds_single) else 0 end as IDM_base_obtain
from
`yu-it-base.jrdb_raw_data.a_bac` bac
inner join `yu-it-base.jrdb_raw_data.a_kab` kab  on
    bac.partitioning_date = kab.partitioning_date
    and bac.race_key_place_code = kab.held_key_place_code
inner join `yu-it-base.jrdb_raw_data.a_kyi` kyi  on
    bac.partitioning_date = kyi.partitioning_date
    and bac.race_key_place_code = kyi.race_key_place_code
    and bac.race_key_round = kyi.race_key_round
inner join  `yu-it-base.jrdb_raw_data_schema_info.category_mst` cat_place
    on
    cat_place.table_name = 'a_kyi' and cat_place.column_pysical_name = 'race_key_place_code'
    and cat_place.category = kyi.race_key_place_code 
left outer join `yu-it-base.jrdb_raw_data.a_sed` sed  on
    bac.partitioning_date = sed.partitioning_date
    and bac.race_key_place_code = sed.race_key_place_code
    and bac.race_key_round = sed.race_key_round
    and kyi.horse_no = sed.horse_no
    and sed.horse_performance_order = 1
left outer join jrdb_raw_data_schema_info.category_mst cat_weather_code on cat_weather_code.table_name = 'a_kab' and cat_weather_code.column_pysical_name = 'weather_code' and cat_weather_code.category = kab.weather_code
left outer join jrdb_raw_data_schema_info.category_mst cat_grass_field_status_code on cat_grass_field_status_code.table_name = 'a_kab' and cat_grass_field_status_code.column_pysical_name = 'grass_field_status_code' and cat_grass_field_status_code.category = kab.grass_field_status_code
left outer join jrdb_raw_data_schema_info.category_mst cat_dart_field_status_code on cat_dart_field_status_code.table_name = 'a_kab' and cat_dart_field_status_code.column_pysical_name = 'dart_field_status_code' and cat_dart_field_status_code.category = kab.dart_field_status_code
left outer join jrdb_raw_data_schema_info.category_mst cat_grass_type on cat_grass_type.table_name = 'a_kab' and cat_grass_type.column_pysical_name = 'grass_type' and cat_grass_type.category = kab.grass_type
left outer join jrdb_raw_data_schema_info.category_mst cat_race_condition_type on cat_race_condition_type.table_name = 'a_bac' and cat_race_condition_type.column_pysical_name = 'race_condition_type' and cat_race_condition_type.category = bac.race_condition_type
left outer join jrdb_raw_data_schema_info.category_mst cat_race_condition_condition on cat_race_condition_condition.table_name = 'a_bac' and cat_race_condition_condition.column_pysical_name = 'race_condition_condition' and cat_race_condition_condition.category = bac.race_condition_condition
left outer join jrdb_raw_data_schema_info.category_mst cat_race_condition_mark on cat_race_condition_mark.table_name = 'a_bac' and cat_race_condition_mark.column_pysical_name = 'race_condition_mark' and cat_race_condition_mark.category = bac.race_condition_mark
left outer join jrdb_raw_data_schema_info.category_mst cat_race_condition_grade on cat_race_condition_grade.table_name = 'a_bac' and cat_race_condition_grade.column_pysical_name = 'race_condition_grade' and cat_race_condition_grade.category = bac.race_condition_grade
group by concat(format_datetime("%F",bac.date),"_",kyi.race_key_place_code,kyi.race_key_round) ,kyi.race_key_place_code,kyi.race_key_year,kyi.race_key_no,kyi.race_key_day,kyi.race_key_round
